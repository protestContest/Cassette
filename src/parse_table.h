#pragma once

/*
Grammar:
  1 program         → block $
  2 block           → block stmt
  3 block           → newlines
  4 block           → ε
  5 stmt            → expr newlines
  6 expr            → "def" ID sum
  7 expr            → if_block
  8 expr            → call
  9 if_block        → "if" sum "do" block "else" block "end"
 10 call            → call sum
 11 call            → sum
 12 sum             → sum "+" product
 13 sum             → sum "-" product
 14 sum             → product
 15 product         → product "*" primary
 16 product         → product "/" primary
 17 product         → primary
 18 primary         → NUM
 19 primary         → ID
 20 primary         → group
 21 primary         → lambda
 22 primary         → do_block
 23 do_block        → "do" block "end"
 24 group           → "(" expr ")"
 25 lambda          → group "->" primary
 26 newlines        → NL
 27 newlines        → $
*/

char *symbol_names[] = {
  [0] = "$",
  [1] = "def",
  [2] = "ID",
  [3] = "if",
  [4] = "do",
  [5] = "else",
  [6] = "end",
  [7] = "+",
  [8] = "-",
  [9] = "*",
  [10] = "/",
  [11] = "NUM",
  [12] = "(",
  [13] = ")",
  [14] = "->",
  [15] = "NL",
  [16] = "program",
  [17] = "block",
  [18] = "stmt",
  [19] = "expr",
  [20] = "if_block",
  [21] = "call",
  [22] = "sum",
  [23] = "product",
  [24] = "primary",
  [25] = "do_block",
  [26] = "group",
  [27] = "lambda",
  [28] = "newlines",
};
#define TOP_SYMBOL 16

// indexed by state
static unused i32 reduction_syms[] = {
  17,  -1,  17,  28,  28,  17,  16,  -1,  -1,  19,  19,  -1,  21,  22,  23,  24,
  24,  24,  24,  24,  -1,  17,  18,  -1,  21,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
  -1,  -1,  19,  17,  22,  22,  23,  23,  27,  26,  25,  -1,  17,  -1,  20,
};

// indexed by state
static unused u32 reduction_sizes[] = {
   0,   0,   1,   1,   1,   2,   2,   0,   0,   1,   1,   0,   1,   1,   1,   1,
   1,   1,   1,   1,   0,   0,   2,   0,   2,   0,   0,   0,   0,   0,   0,   0,
   0,   0,   3,   0,   3,   3,   3,   3,   3,   3,   3,   0,   0,   0,   7,
};

// indexed by state, symbol
#define NUM_STATES 47
#define NUM_SYMS 29
static unused i32 actions[][NUM_SYMS] = {
  {   4,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      3,  -1,   1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,   2,},
  {   6,   8,  16,  11,  21,  -1,  -1,  -1,  -1,  -1,  -1,  15,  20,  -1,  -1,
     -1,  -1,  -1,   5,   7,   9,  10,  12,  13,  14,  19,  17,  18,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {   4,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      3,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  22,},
  {  -1,  -1,  23,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  16,  -1,  21,  -1,  -1,  -1,  -1,  -1,  -1,  15,  20,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  24,  13,  14,  19,  17,  18,  -1,},
  {  -1,  -1,  16,  -1,  21,  -1,  -1,  -1,  -1,  -1,  -1,  15,  20,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  25,  13,  14,  19,  17,  18,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  27,  26,  -1,  -1,  -1,  -1,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  29,  28,  -1,  -1,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  30,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,   8,  16,  11,  21,  -1,  -1,  -1,  -1,  -1,  -1,  15,  32,  -1,  -1,
     -1,  -1,  -1,  -1,  31,   9,  10,  12,  13,  14,  19,  17,  18,  -1,},
  {   4,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      3,  -1,  33,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,   2,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  16,  -1,  21,  -1,  -1,  -1,  -1,  -1,  -1,  15,  20,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  34,  13,  14,  19,  17,  18,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  27,  26,  -1,  -1,  -1,  -1,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  35,  -1,  -1,  27,  26,  -1,  -1,  -1,  -1,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  16,  -1,  21,  -1,  -1,  -1,  -1,  -1,  -1,  15,  20,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  36,  14,  19,  17,  18,  -1,},
  {  -1,  -1,  16,  -1,  21,  -1,  -1,  -1,  -1,  -1,  -1,  15,  20,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  37,  14,  19,  17,  18,  -1,},
  {  -1,  -1,  16,  -1,  21,  -1,  -1,  -1,  -1,  -1,  -1,  15,  20,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  38,  19,  17,  18,  -1,},
  {  -1,  -1,  16,  -1,  21,  -1,  -1,  -1,  -1,  -1,  -1,  15,  20,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  39,  19,  17,  18,  -1,},
  {  -1,  -1,  16,  -1,  21,  -1,  -1,  -1,  -1,  -1,  -1,  15,  20,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  40,  19,  17,  18,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  41,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,   8,  16,  11,  21,  -1,  -1,  -1,  -1,  -1,  -1,  15,  20,  -1,  -1,
     -1,  -1,  -1,  -1,  31,   9,  10,  12,  13,  14,  19,  17,  18,  -1,},
  {  -1,   8,  16,  11,  21,  -1,  42,  -1,  -1,  -1,  -1,  15,  32,  -1,  -1,
     -1,  -1,  -1,   5,   7,   9,  10,  12,  13,  14,  19,  17,  18,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  27,  26,  -1,  -1,  -1,  -1,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {   4,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      3,  -1,  43,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,   2,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  29,  28,  -1,  -1,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  29,  28,  -1,  -1,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,   8,  16,  11,  21,  44,  -1,  -1,  -1,  -1,  -1,  15,  32,  -1,  -1,
     -1,  -1,  -1,   5,   7,   9,  10,  12,  13,  14,  19,  17,  18,  -1,},
  {   4,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
      3,  -1,  45,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,   2,},
  {  -1,   8,  16,  11,  21,  -1,  46,  -1,  -1,  -1,  -1,  15,  32,  -1,  -1,
     -1,  -1,  -1,   5,   7,   9,  10,  12,  13,  14,  19,  17,  18,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
     -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
};
