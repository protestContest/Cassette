const char *symbol_names[] = {
  [0] = "$",
  [1] = "+",
  [2] = "-",
  [3] = "*",
  [4] = "/",
  [5] = "NUM",
  [6] = "ID",
  [7] = "(",
  [8] = ")",
  [9] = "->",
  [10] = "program",
  [11] = "expr",
  [12] = "call",
  [13] = "arg",
  [14] = "sum",
  [15] = "product",
  [16] = "primary",
  [17] = "group",
  [18] = "lambda",
};
#define TOP_SYMBOL 10

// indexed by state
static unused i32 reduction_syms[] = {
  -1,  -1,  11,  12,  13,  14,  15,  16,  16,  16,  16,  -1,  10,  12,
  -1,  -1,  -1,  -1,  -1,  -1,  -1,  14,  14,  15,  15,  18,  17,
};

// indexed by state
static unused u32 reduction_sizes[] = {
   0,   0,   1,   1,   1,   1,   1,   1,   1,   1,   1,   0,   2,   2,
   0,   0,   0,   0,   0,   0,   0,   3,   3,   3,   3,   3,   3,
};

// indexed by state, symbol
#define NUM_SYMS 19
static unused i32 actions[][NUM_SYMS] = {
  {  -1,  -1,  -1,  -1,  -1,   7,   8,  11,  -1,  -1,  -1,   1,   2,   3,   4,   5,   6,   9,  10,},
  {  12,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  -1,   7,   8,  11,  -1,  -1,  -1,  -1,  -1,  13,   4,   5,   6,   9,  10,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  15,  14,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  17,  16,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  18,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  -1,   7,   8,  20,  -1,  -1,  -1,  19,   2,   3,   4,   5,   6,   9,  10,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  -1,   7,   8,  11,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  21,   6,   9,  10,},
  {  -1,  -1,  -1,  -1,  -1,   7,   8,  11,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  22,   6,   9,  10,},
  {  -1,  -1,  -1,  -1,  -1,   7,   8,  11,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  23,   9,  10,},
  {  -1,  -1,  -1,  -1,  -1,   7,   8,  11,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  24,   9,  10,},
  {  -1,  -1,  -1,  -1,  -1,   7,   8,  11,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  25,   9,  10,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  26,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  -1,   7,   8,  11,  -1,  -1,  -1,  19,   2,   3,   4,   5,   6,   9,  10,},
  {  -1,  -1,  -1,  17,  16,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  17,  16,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
  {  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,},
};
