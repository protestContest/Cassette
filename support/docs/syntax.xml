<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE language>
<language name="Cassette" section="Scripts"
    version="1" kateversion="5.0"
    extensions="*.ct"
    author="Zack Michener (z@zjm.me)" license="MIT">

  <highlighting>
    <contexts>
      <context name="stmt" lineEndContext="#pop">
        <DetectChar char=";" attribute="Comment" context="comment" />
        <WordDetect String="module" attribute="Control" context="module" />
        <WordDetect String="import" attribute="Control" context="import" />
        <WordDetect String="let" attribute="Control" context="assigns" />
        <RegExpr String="def\s+\(([a-zA-Z_]\w*\s*)+\s*\)" lookAhead="true" context="define" />
        <DetectChar char="," context="#pop" />
        <IncludeRules context="call" />
      </context>

      <context name="module" lineEndContext="#pop">
        <DetectChar char=";" attribute="Comment" context="comment" />
        <DetectIdentifier attribute="Definition" />
      </context>

      <context name="import" lineEndContext="#pop">
        <DetectChar char=";" attribute="Comment" context="comment" />
        <WordDetect String="as" attribute="Control" context="#pop!alias" />
        <DetectIdentifier attribute="Variable" />
      </context>

      <context name="alias" lineEndContext="#pop">
        <DetectChar char=";" attribute="Comment" context="comment" />
        <DetectChar char="*" attribute="Definition" />
        <DetectIdentifier attribute="Definition" />
      </context>

      <context name="call" lineEndContext="#pop">
        <DetectChar char=";" attribute="Comment" context="comment" />
        <DetectChar char=")" context="#pop" />
        <DetectChar char="," lookAhead="true" context="#pop" />
        <WordDetect String="end" lookAhead="true" context="#pop" />
        <WordDetect String="do" lookAhead="true" context="args" />
        <WordDetect String="if" lookAhead="true" context="args" />
        <WordDetect String="cond do" lookAhead="true" context="args" />
        <WordDetect String="not" lookAhead="true" context="args" />
        <WordDetect String="and" lookAhead="true" context="args" />
        <WordDetect String="or" lookAhead="true" context="args" />
        <WordDetect String="in" lookAhead="true" context="args" />
        <RegExpr String="[a-zA-Z_]\S*\s*(\sand\s|\sor\s|\sin\s|\s+[+*/%#~&gt;&lt;=&amp;^|!]\s+)" lookAhead="true" context="args" />
        <RegExpr String="[a-zA-Z_]\S*(\.[a-zA-Z_]\w*)?" attribute="Variable" context="args" />
        <IncludeRules context="args" />
      </context>

      <context name="args" lineEndContext="#pop">
        <DetectChar char=";" attribute="Comment" context="comment" />
        <DetectChar char="}" lookAhead="true" context="#pop" />
        <DetectChar char="]" lookAhead="true" context="#pop" />
        <DetectChar char=")" lookAhead="true" context="#pop" />
        <WordDetect String="else" lookAhead="true" context="#pop" />
        <WordDetect String="end" lookAhead="true" context="#pop" />
        <WordDetect String="not" attribute="Control" />
        <WordDetect String="and" attribute="Control" />
        <WordDetect String="or" attribute="Control" />
        <WordDetect String="in" attribute="Control" />
        <RegExpr String="^(==|!=|&lt;=|&gt;=|&lt;&gt;|&lt;&lt;|&gt;&gt;|->|[-+*/%~#&gt;&lt;=|&amp;^])" attribute="Control" />
        <RegExpr String="\s(==|!=|&lt;=|&gt;=|&lt;&gt;|&lt;&lt;|&gt;&gt;|->|[-+*/%~#&gt;&lt;=|&amp;^])" attribute="Control" />
        <DetectChar char="," lookAhead="true" context="#pop" />
        <DetectChar char="\" attribute="Control" context="lambda" />
        <DetectChar char="{" context="tuple" />
        <DetectChar char="[" context="list" />
        <DetectChar char="(" context="call" />
        <WordDetect String="do" attribute="Control" context="block" />
        <WordDetect String="if" attribute="Control" context="if" />
        <RegExpr String="cond\s+do" attribute="Control" context="clauses" />
        <IncludeRules context="value" />
      </context>

      <context name="assigns" lineEndContext="#pop">
        <DetectChar char=";" attribute="Comment" context="comment" />
        <RegExpr String="[a-zA-Z_]\S*" attribute="Definition" />
        <RegExpr String=",\s*$" context="assigns" />
        <DetectChar char="=" context="call" />
      </context>

      <context name="define">
        <DetectChar char=";" attribute="Comment" context="comment" />
        <WordDetect String="def" attribute="Control" />
        <DetectIdentifier attribute="Variable" context="#pop!defargs" />
      </context>

      <context name="defargs">
        <DetectChar char=";" attribute="Comment" context="comment" />
        <DetectChar char=")" context="#pop!args" />
        <DetectIdentifier attribute="Definition" />
      </context>

      <context name="block">
        <DetectChar char=";" attribute="Comment" context="comment" />
        <WordDetect String="end" attribute="Control" context="#pop" />
        <WordDetect String="else" attribute="Control" />
        <IncludeRules context="stmt" />
      </context>

      <context name="if">
        <DetectChar char=";" attribute="Comment" context="comment" />
        <WordDetect String="do" attribute="Control" context="#pop!block" />
        <IncludeRules context="args" />
      </context>

      <context name="clauses">
        <DetectChar char=";" attribute="Comment" context="comment" />
        <WordDetect String="end" attribute="Control" context="#pop" />
        <RegExpr String="->" attribute="Control" context="call" />
        <IncludeRules context="args" />
      </context>

      <context name="tuple">
        <DetectChar char=";" attribute="Comment" context="comment" />
        <DetectChar char="}" context="#pop" />
        <RegExpr String="[a-zA-Z_]\w*:" attribute="Symbol" />
        <DetectChar char="," context="#stay" />
        <IncludeRules context="stmt" />
      </context>

      <context name="list">
        <DetectChar char=";" attribute="Comment" context="comment" />
        <DetectChar char="]" context="#pop" />
        <DetectChar char="," context="#stay" />
        <IncludeRules context="stmt" />
      </context>

      <context name="lambda">
        <DetectChar char=";" attribute="Comment" context="comment" />
        <RegExpr String="->" attribute="Control" context="#pop" />
        <DetectIdentifier attribute="Definition" />
      </context>

      <context name="value">
        <DetectChar char=";" attribute="Comment" context="comment" />
        <DetectChar char="&quot;" attribute="String" context="string" />
        <WordDetect String="true" attribute="Control" />
        <WordDetect String="false" attribute="Control" />
        <WordDetect String="nil" attribute="Control" />
        <RegExpr String=":[a-zA-Z_]\w*" attribute="Symbol" />
        <RegExpr String="\b0x[0-9A-F_]+" attribute="Number" />
        <RegExpr String="\b[0-9]+" attribute="Number" />
        <RegExpr String="\$." attribute="Number" />
      </context>

      <context name="string">
        <RegExpr String="\\." attribute="String" context="#stay" />
        <DetectChar char="&quot;" attribute="String" context="#pop" />
        <RegExpr String="." attribute="String" />
      </context>

      <context name="comment" lineEndContext="#pop">
        <RegExpr String="." attribute="Comment" />
      </context>
    </contexts>

    <itemDatas>
      <itemData name="Normal Text" defStyleNum="dsNormal"/>
      <itemData name="Import" defStyleNum="dsImport" />
      <itemData name="Control" defStyleNum="dsControlFlow" />
      <itemData name="Comment" defStyleNum="dsComment"/>
      <itemData name="Number" defStyleNum="dsDecVal"/>
      <itemData name="String" defStyleNum="dsString"/>
      <itemData name="Operator" defStyleNum="dsOperator"/>
      <itemData name="Delimiter" defStyleNum="dsNormal"/>
      <itemData name="Symbol" defStyleNum="dsConstant" />
      <itemData name="Keyword" defStyleNum="dsKeyword"/>
      <itemData name="Pseudo variable" defStyleNum="dsBuiltIn"/>
      <itemData name="Kernel methods" defStyleNum="dsBuiltIn" />
      <itemData name="Definition" defStyleNum="dsFunction" />
      <itemData name="Variable" defStyleNum="dsVariable" />
      <itemData name="Parameter" defStyleNum="dsFunction" />
    </itemDatas>
  </highlighting>
  <general>
    <comments>
      <comment name="singleLine" start=";" position="afterwhitespace"/>
    </comments>
    <keywords casesensitive="1" weakDeliminator="!?"/>
  </general>
</language>
