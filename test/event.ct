module Event
import IO
export poll, loop, type, when, where, message, modifiers, ticks

def poll() trap(:sdl_poll_event)
def ticks() trap(:sdl_get_ticks)

def type(event) event[0]
def when(event) event[1]
def where(event) event[2]
def message(event) event[3]
def modifiers(event) event[4]

def loop(on_event)
  let event = poll()
  in if
    not event, loop(on_event)
    type(event) == :quit, nil
    on_event and on_event(event) == :quit, nil
    else loop(on_event)
