module Math

let Pi = 3.141593
let E = 2.718282

def (abs n) if n < 0 do -n else n end
def (min a b) if a < b do a else b end
def (max a b) if a > b do a else b end
def (ceil n) if n >= 0 do (trunc n) + 1 else (trunc n) end
def (floor n) if n >= 0 do (trunc n) else (trunc n) - 1 end
def (round n) (floor n + 0.5)
def (clamp n low high) (min (max n low) high)
def (rand-int min max) (trunc (Sys.random) * (max - min)) + min

def (sqrt n) do
  def (loop guess) do
    if (abs n - guess * guess) < 0.000001 do
      guess
    else
      let guess = (guess + n / guess) / 2
      loop guess
    end
  end

  loop 1.0
end

def (expt base power) do
  def (loop n product) do
    if n == power do
      product
    else
      loop n + 1 base * product
    end
  end

  if power < 0 do
    1 / (loop -power)
  else
    loop 0 1
  end
end

def (exp n) (expt E n)
