import Sketch, Window, Graphics (Rect), IO

Host.use_resources("support/Fonts")
let window = Window.open("Edit", 630, 380)
Window.set_font("Helvetica", 18, window)
Window.move_to(10, 20, window)

Sketch.run(window, update, 0)

def update(event, state, window) do
  handle_event(event, window)
  state
end

def newline(window) do
  let pen = Window.get_pen(window)
  let font = Window.font_info(window)
  if pen.y + font.line_height < window.height - 10,
    Window.move_to(10, pen.y + font.line_height, window)
  else
    Window.move_to(10, window.height, window)
end

def handle_event(event, window) when event.what == :keyDown,
  handle_key(event.message & 0xFF, window)

def handle_event(event, window) nil

def handle_key(key, window) when key == $\n or key == $\r,
  newline(window)

def handle_key(key, window) do
  guard printable?(key) else nil
  let pen = Window.get_pen(window)
  let str = Host.format(key)
  if Window.string_width(str, window) > window.width - pen.x,
    newline(window)
  else nil

  Window.draw_string(str, window)
end

def printable?(ch) when ch < $\s, false
def printable?(ch) when ch >= 0x7F, false
def printable?(ch) true
