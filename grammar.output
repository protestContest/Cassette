Grammar

    0 $accept: expr $end

    1 expr: do_block
    2     | if_block
    3     | cond_block
    4     | define
    5     | call

    6 do_block: DO block END

    7 if_block: IF arg DO block END
    8         | IF arg DO block ELSE block END
    9         | IF arg arg

   10 cond_block: COND DO clauses END

   11 clauses: clauses NEWLINE expr DCOLON expr
   12        | /* empty */

   13 define: DEF ID expr
   14       | DEF '(' params ')' expr

   15 params: params ID
   16       | /* empty */

   17 block: block NEWLINE expr
   18      | expr

   19 call: call arg
   20     | arg

   21 arg: equal
   22    | entry

   23 equal: equal '=' pair
   24      | pair

   25 pair: compare '|' compare
   26     | compare

   27 compare: sum '<' sum
   28        | sum '>' sum
   29        | sum

   30 sum: sum '+' product
   31    | sum '-' product
   32    | product

   33 product: product '*' primary
   34        | product '/' primary
   35        | primary

   36 primary: ID
   37        | NUM
   38        | STR
   39        | group
   40        | lambda
   41        | list
   42        | dict

   43 group: '(' expr ')'

   44 lambda: group ARROW primary

   45 list: '[' items ']'

   46 items: items primary
   47      | primary

   48 dict: '{' entries '}'

   49 entries: entries entry
   50        | /* empty */

   51 entry: ID ':' equal


Terminals, with rules where they appear

$end (0) 0
'(' (40) 14 43
')' (41) 14 43
'*' (42) 33
'+' (43) 30
'-' (45) 31
'/' (47) 34
':' (58) 51
'<' (60) 27
'=' (61) 23
'>' (62) 28
'[' (91) 45
']' (93) 45
'{' (123) 48
'|' (124) 25
'}' (125) 48
error (256)
ID (258) 13 15 36 51
NUM (259) 37
STR (260) 38
NEWLINE (261) 11 17
COND (262) 10
DEF (263) 13 14
DO (264) 6 7 8 10
ELSE (265) 8
END (266) 6 7 8 10
IF (267) 7 8 9
ARROW (268) 44
DCOLON (269) 11


Nonterminals, with rules where they appear

$accept (30)
    on left: 0
expr (31)
    on left: 1 2 3 4 5, on right: 0 11 13 14 17 18 43
do_block (32)
    on left: 6, on right: 1
if_block (33)
    on left: 7 8 9, on right: 2
cond_block (34)
    on left: 10, on right: 3
clauses (35)
    on left: 11 12, on right: 10 11
define (36)
    on left: 13 14, on right: 4
params (37)
    on left: 15 16, on right: 14 15
block (38)
    on left: 17 18, on right: 6 7 8 17
call (39)
    on left: 19 20, on right: 5 19
arg (40)
    on left: 21 22, on right: 7 8 9 19 20
equal (41)
    on left: 23 24, on right: 21 23 51
pair (42)
    on left: 25 26, on right: 23 24
compare (43)
    on left: 27 28 29, on right: 25 26
sum (44)
    on left: 30 31 32, on right: 27 28 29 30 31
product (45)
    on left: 33 34 35, on right: 30 31 32 33 34
primary (46)
    on left: 36 37 38 39 40 41 42, on right: 33 34 35 44 46 47
group (47)
    on left: 43, on right: 39 44
lambda (48)
    on left: 44, on right: 40
list (49)
    on left: 45, on right: 41
items (50)
    on left: 46 47, on right: 45 46
dict (51)
    on left: 48, on right: 42
entries (52)
    on left: 49 50, on right: 48 49
entry (53)
    on left: 51, on right: 22 49


state 0

    0 $accept: . expr $end

    ID    shift, and go to state 1
    NUM   shift, and go to state 2
    STR   shift, and go to state 3
    COND  shift, and go to state 4
    DEF   shift, and go to state 5
    DO    shift, and go to state 6
    IF    shift, and go to state 7
    '('   shift, and go to state 8
    '['   shift, and go to state 9
    '{'   shift, and go to state 10

    expr        go to state 11
    do_block    go to state 12
    if_block    go to state 13
    cond_block  go to state 14
    define      go to state 15
    call        go to state 16
    arg         go to state 17
    equal       go to state 18
    pair        go to state 19
    compare     go to state 20
    sum         go to state 21
    product     go to state 22
    primary     go to state 23
    group       go to state 24
    lambda      go to state 25
    list        go to state 26
    dict        go to state 27
    entry       go to state 28


state 1

   36 primary: ID .
   51 entry: ID . ':' equal

    ':'  shift, and go to state 29

    $default  reduce using rule 36 (primary)


state 2

   37 primary: NUM .

    $default  reduce using rule 37 (primary)


state 3

   38 primary: STR .

    $default  reduce using rule 38 (primary)


state 4

   10 cond_block: COND . DO clauses END

    DO  shift, and go to state 30


state 5

   13 define: DEF . ID expr
   14       | DEF . '(' params ')' expr

    ID   shift, and go to state 31
    '('  shift, and go to state 32


state 6

    6 do_block: DO . block END

    ID    shift, and go to state 1
    NUM   shift, and go to state 2
    STR   shift, and go to state 3
    COND  shift, and go to state 4
    DEF   shift, and go to state 5
    DO    shift, and go to state 6
    IF    shift, and go to state 7
    '('   shift, and go to state 8
    '['   shift, and go to state 9
    '{'   shift, and go to state 10

    expr        go to state 33
    do_block    go to state 12
    if_block    go to state 13
    cond_block  go to state 14
    define      go to state 15
    block       go to state 34
    call        go to state 16
    arg         go to state 17
    equal       go to state 18
    pair        go to state 19
    compare     go to state 20
    sum         go to state 21
    product     go to state 22
    primary     go to state 23
    group       go to state 24
    lambda      go to state 25
    list        go to state 26
    dict        go to state 27
    entry       go to state 28


state 7

    7 if_block: IF . arg DO block END
    8         | IF . arg DO block ELSE block END
    9         | IF . arg arg

    ID   shift, and go to state 1
    NUM  shift, and go to state 2
    STR  shift, and go to state 3
    '('  shift, and go to state 8
    '['  shift, and go to state 9
    '{'  shift, and go to state 10

    arg      go to state 35
    equal    go to state 18
    pair     go to state 19
    compare  go to state 20
    sum      go to state 21
    product  go to state 22
    primary  go to state 23
    group    go to state 24
    lambda   go to state 25
    list     go to state 26
    dict     go to state 27
    entry    go to state 28


state 8

   43 group: '(' . expr ')'

    ID    shift, and go to state 1
    NUM   shift, and go to state 2
    STR   shift, and go to state 3
    COND  shift, and go to state 4
    DEF   shift, and go to state 5
    DO    shift, and go to state 6
    IF    shift, and go to state 7
    '('   shift, and go to state 8
    '['   shift, and go to state 9
    '{'   shift, and go to state 10

    expr        go to state 36
    do_block    go to state 12
    if_block    go to state 13
    cond_block  go to state 14
    define      go to state 15
    call        go to state 16
    arg         go to state 17
    equal       go to state 18
    pair        go to state 19
    compare     go to state 20
    sum         go to state 21
    product     go to state 22
    primary     go to state 23
    group       go to state 24
    lambda      go to state 25
    list        go to state 26
    dict        go to state 27
    entry       go to state 28


state 9

   45 list: '[' . items ']'

    ID   shift, and go to state 37
    NUM  shift, and go to state 2
    STR  shift, and go to state 3
    '('  shift, and go to state 8
    '['  shift, and go to state 9
    '{'  shift, and go to state 10

    primary  go to state 38
    group    go to state 24
    lambda   go to state 25
    list     go to state 26
    items    go to state 39
    dict     go to state 27


state 10

   48 dict: '{' . entries '}'

    $default  reduce using rule 50 (entries)

    entries  go to state 40


state 11

    0 $accept: expr . $end

    $end  shift, and go to state 41


state 12

    1 expr: do_block .

    $default  reduce using rule 1 (expr)


state 13

    2 expr: if_block .

    $default  reduce using rule 2 (expr)


state 14

    3 expr: cond_block .

    $default  reduce using rule 3 (expr)


state 15

    4 expr: define .

    $default  reduce using rule 4 (expr)


state 16

    5 expr: call .
   19 call: call . arg

    ID   shift, and go to state 1
    NUM  shift, and go to state 2
    STR  shift, and go to state 3
    '('  shift, and go to state 8
    '['  shift, and go to state 9
    '{'  shift, and go to state 10

    $default  reduce using rule 5 (expr)

    arg      go to state 42
    equal    go to state 18
    pair     go to state 19
    compare  go to state 20
    sum      go to state 21
    product  go to state 22
    primary  go to state 23
    group    go to state 24
    lambda   go to state 25
    list     go to state 26
    dict     go to state 27
    entry    go to state 28


state 17

   20 call: arg .

    $default  reduce using rule 20 (call)


state 18

   21 arg: equal .
   23 equal: equal . '=' pair

    '='  shift, and go to state 43

    $default  reduce using rule 21 (arg)


state 19

   24 equal: pair .

    $default  reduce using rule 24 (equal)


state 20

   25 pair: compare . '|' compare
   26     | compare .

    '|'  shift, and go to state 44

    $default  reduce using rule 26 (pair)


state 21

   27 compare: sum . '<' sum
   28        | sum . '>' sum
   29        | sum .
   30 sum: sum . '+' product
   31    | sum . '-' product

    '<'  shift, and go to state 45
    '>'  shift, and go to state 46
    '+'  shift, and go to state 47
    '-'  shift, and go to state 48

    $default  reduce using rule 29 (compare)


state 22

   32 sum: product .
   33 product: product . '*' primary
   34        | product . '/' primary

    '*'  shift, and go to state 49
    '/'  shift, and go to state 50

    $default  reduce using rule 32 (sum)


state 23

   35 product: primary .

    $default  reduce using rule 35 (product)


state 24

   39 primary: group .
   44 lambda: group . ARROW primary

    ARROW  shift, and go to state 51

    $default  reduce using rule 39 (primary)


state 25

   40 primary: lambda .

    $default  reduce using rule 40 (primary)


state 26

   41 primary: list .

    $default  reduce using rule 41 (primary)


state 27

   42 primary: dict .

    $default  reduce using rule 42 (primary)


state 28

   22 arg: entry .

    $default  reduce using rule 22 (arg)


state 29

   51 entry: ID ':' . equal

    ID   shift, and go to state 37
    NUM  shift, and go to state 2
    STR  shift, and go to state 3
    '('  shift, and go to state 8
    '['  shift, and go to state 9
    '{'  shift, and go to state 10

    equal    go to state 52
    pair     go to state 19
    compare  go to state 20
    sum      go to state 21
    product  go to state 22
    primary  go to state 23
    group    go to state 24
    lambda   go to state 25
    list     go to state 26
    dict     go to state 27


state 30

   10 cond_block: COND DO . clauses END

    $default  reduce using rule 12 (clauses)

    clauses  go to state 53


state 31

   13 define: DEF ID . expr

    ID    shift, and go to state 1
    NUM   shift, and go to state 2
    STR   shift, and go to state 3
    COND  shift, and go to state 4
    DEF   shift, and go to state 5
    DO    shift, and go to state 6
    IF    shift, and go to state 7
    '('   shift, and go to state 8
    '['   shift, and go to state 9
    '{'   shift, and go to state 10

    expr        go to state 54
    do_block    go to state 12
    if_block    go to state 13
    cond_block  go to state 14
    define      go to state 15
    call        go to state 16
    arg         go to state 17
    equal       go to state 18
    pair        go to state 19
    compare     go to state 20
    sum         go to state 21
    product     go to state 22
    primary     go to state 23
    group       go to state 24
    lambda      go to state 25
    list        go to state 26
    dict        go to state 27
    entry       go to state 28


state 32

   14 define: DEF '(' . params ')' expr

    $default  reduce using rule 16 (params)

    params  go to state 55


state 33

   18 block: expr .

    $default  reduce using rule 18 (block)


state 34

    6 do_block: DO block . END
   17 block: block . NEWLINE expr

    NEWLINE  shift, and go to state 56
    END      shift, and go to state 57


state 35

    7 if_block: IF arg . DO block END
    8         | IF arg . DO block ELSE block END
    9         | IF arg . arg

    ID   shift, and go to state 1
    NUM  shift, and go to state 2
    STR  shift, and go to state 3
    DO   shift, and go to state 58
    '('  shift, and go to state 8
    '['  shift, and go to state 9
    '{'  shift, and go to state 10

    arg      go to state 59
    equal    go to state 18
    pair     go to state 19
    compare  go to state 20
    sum      go to state 21
    product  go to state 22
    primary  go to state 23
    group    go to state 24
    lambda   go to state 25
    list     go to state 26
    dict     go to state 27
    entry    go to state 28


state 36

   43 group: '(' expr . ')'

    ')'  shift, and go to state 60


state 37

   36 primary: ID .

    $default  reduce using rule 36 (primary)


state 38

   47 items: primary .

    $default  reduce using rule 47 (items)


state 39

   45 list: '[' items . ']'
   46 items: items . primary

    ID   shift, and go to state 37
    NUM  shift, and go to state 2
    STR  shift, and go to state 3
    '('  shift, and go to state 8
    '['  shift, and go to state 9
    ']'  shift, and go to state 61
    '{'  shift, and go to state 10

    primary  go to state 62
    group    go to state 24
    lambda   go to state 25
    list     go to state 26
    dict     go to state 27


state 40

   48 dict: '{' entries . '}'
   49 entries: entries . entry

    ID   shift, and go to state 63
    '}'  shift, and go to state 64

    entry  go to state 65


state 41

    0 $accept: expr $end .

    $default  accept


state 42

   19 call: call arg .

    $default  reduce using rule 19 (call)


state 43

   23 equal: equal '=' . pair

    ID   shift, and go to state 37
    NUM  shift, and go to state 2
    STR  shift, and go to state 3
    '('  shift, and go to state 8
    '['  shift, and go to state 9
    '{'  shift, and go to state 10

    pair     go to state 66
    compare  go to state 20
    sum      go to state 21
    product  go to state 22
    primary  go to state 23
    group    go to state 24
    lambda   go to state 25
    list     go to state 26
    dict     go to state 27


state 44

   25 pair: compare '|' . compare

    ID   shift, and go to state 37
    NUM  shift, and go to state 2
    STR  shift, and go to state 3
    '('  shift, and go to state 8
    '['  shift, and go to state 9
    '{'  shift, and go to state 10

    compare  go to state 67
    sum      go to state 21
    product  go to state 22
    primary  go to state 23
    group    go to state 24
    lambda   go to state 25
    list     go to state 26
    dict     go to state 27


state 45

   27 compare: sum '<' . sum

    ID   shift, and go to state 37
    NUM  shift, and go to state 2
    STR  shift, and go to state 3
    '('  shift, and go to state 8
    '['  shift, and go to state 9
    '{'  shift, and go to state 10

    sum      go to state 68
    product  go to state 22
    primary  go to state 23
    group    go to state 24
    lambda   go to state 25
    list     go to state 26
    dict     go to state 27


state 46

   28 compare: sum '>' . sum

    ID   shift, and go to state 37
    NUM  shift, and go to state 2
    STR  shift, and go to state 3
    '('  shift, and go to state 8
    '['  shift, and go to state 9
    '{'  shift, and go to state 10

    sum      go to state 69
    product  go to state 22
    primary  go to state 23
    group    go to state 24
    lambda   go to state 25
    list     go to state 26
    dict     go to state 27


state 47

   30 sum: sum '+' . product

    ID   shift, and go to state 37
    NUM  shift, and go to state 2
    STR  shift, and go to state 3
    '('  shift, and go to state 8
    '['  shift, and go to state 9
    '{'  shift, and go to state 10

    product  go to state 70
    primary  go to state 23
    group    go to state 24
    lambda   go to state 25
    list     go to state 26
    dict     go to state 27


state 48

   31 sum: sum '-' . product

    ID   shift, and go to state 37
    NUM  shift, and go to state 2
    STR  shift, and go to state 3
    '('  shift, and go to state 8
    '['  shift, and go to state 9
    '{'  shift, and go to state 10

    product  go to state 71
    primary  go to state 23
    group    go to state 24
    lambda   go to state 25
    list     go to state 26
    dict     go to state 27


state 49

   33 product: product '*' . primary

    ID   shift, and go to state 37
    NUM  shift, and go to state 2
    STR  shift, and go to state 3
    '('  shift, and go to state 8
    '['  shift, and go to state 9
    '{'  shift, and go to state 10

    primary  go to state 72
    group    go to state 24
    lambda   go to state 25
    list     go to state 26
    dict     go to state 27


state 50

   34 product: product '/' . primary

    ID   shift, and go to state 37
    NUM  shift, and go to state 2
    STR  shift, and go to state 3
    '('  shift, and go to state 8
    '['  shift, and go to state 9
    '{'  shift, and go to state 10

    primary  go to state 73
    group    go to state 24
    lambda   go to state 25
    list     go to state 26
    dict     go to state 27


state 51

   44 lambda: group ARROW . primary

    ID   shift, and go to state 37
    NUM  shift, and go to state 2
    STR  shift, and go to state 3
    '('  shift, and go to state 8
    '['  shift, and go to state 9
    '{'  shift, and go to state 10

    primary  go to state 74
    group    go to state 24
    lambda   go to state 25
    list     go to state 26
    dict     go to state 27


state 52

   23 equal: equal . '=' pair
   51 entry: ID ':' equal .

    '='  shift, and go to state 43

    $default  reduce using rule 51 (entry)


state 53

   10 cond_block: COND DO clauses . END
   11 clauses: clauses . NEWLINE expr DCOLON expr

    NEWLINE  shift, and go to state 75
    END      shift, and go to state 76


state 54

   13 define: DEF ID expr .

    $default  reduce using rule 13 (define)


state 55

   14 define: DEF '(' params . ')' expr
   15 params: params . ID

    ID   shift, and go to state 77
    ')'  shift, and go to state 78


state 56

   17 block: block NEWLINE . expr

    ID    shift, and go to state 1
    NUM   shift, and go to state 2
    STR   shift, and go to state 3
    COND  shift, and go to state 4
    DEF   shift, and go to state 5
    DO    shift, and go to state 6
    IF    shift, and go to state 7
    '('   shift, and go to state 8
    '['   shift, and go to state 9
    '{'   shift, and go to state 10

    expr        go to state 79
    do_block    go to state 12
    if_block    go to state 13
    cond_block  go to state 14
    define      go to state 15
    call        go to state 16
    arg         go to state 17
    equal       go to state 18
    pair        go to state 19
    compare     go to state 20
    sum         go to state 21
    product     go to state 22
    primary     go to state 23
    group       go to state 24
    lambda      go to state 25
    list        go to state 26
    dict        go to state 27
    entry       go to state 28


state 57

    6 do_block: DO block END .

    $default  reduce using rule 6 (do_block)


state 58

    7 if_block: IF arg DO . block END
    8         | IF arg DO . block ELSE block END

    ID    shift, and go to state 1
    NUM   shift, and go to state 2
    STR   shift, and go to state 3
    COND  shift, and go to state 4
    DEF   shift, and go to state 5
    DO    shift, and go to state 6
    IF    shift, and go to state 7
    '('   shift, and go to state 8
    '['   shift, and go to state 9
    '{'   shift, and go to state 10

    expr        go to state 33
    do_block    go to state 12
    if_block    go to state 13
    cond_block  go to state 14
    define      go to state 15
    block       go to state 80
    call        go to state 16
    arg         go to state 17
    equal       go to state 18
    pair        go to state 19
    compare     go to state 20
    sum         go to state 21
    product     go to state 22
    primary     go to state 23
    group       go to state 24
    lambda      go to state 25
    list        go to state 26
    dict        go to state 27
    entry       go to state 28


state 59

    9 if_block: IF arg arg .

    $default  reduce using rule 9 (if_block)


state 60

   43 group: '(' expr ')' .

    $default  reduce using rule 43 (group)


state 61

   45 list: '[' items ']' .

    $default  reduce using rule 45 (list)


state 62

   46 items: items primary .

    $default  reduce using rule 46 (items)


state 63

   51 entry: ID . ':' equal

    ':'  shift, and go to state 29


state 64

   48 dict: '{' entries '}' .

    $default  reduce using rule 48 (dict)


state 65

   49 entries: entries entry .

    $default  reduce using rule 49 (entries)


state 66

   23 equal: equal '=' pair .

    $default  reduce using rule 23 (equal)


state 67

   25 pair: compare '|' compare .

    $default  reduce using rule 25 (pair)


state 68

   27 compare: sum '<' sum .
   30 sum: sum . '+' product
   31    | sum . '-' product

    '+'  shift, and go to state 47
    '-'  shift, and go to state 48

    $default  reduce using rule 27 (compare)


state 69

   28 compare: sum '>' sum .
   30 sum: sum . '+' product
   31    | sum . '-' product

    '+'  shift, and go to state 47
    '-'  shift, and go to state 48

    $default  reduce using rule 28 (compare)


state 70

   30 sum: sum '+' product .
   33 product: product . '*' primary
   34        | product . '/' primary

    '*'  shift, and go to state 49
    '/'  shift, and go to state 50

    $default  reduce using rule 30 (sum)


state 71

   31 sum: sum '-' product .
   33 product: product . '*' primary
   34        | product . '/' primary

    '*'  shift, and go to state 49
    '/'  shift, and go to state 50

    $default  reduce using rule 31 (sum)


state 72

   33 product: product '*' primary .

    $default  reduce using rule 33 (product)


state 73

   34 product: product '/' primary .

    $default  reduce using rule 34 (product)


state 74

   44 lambda: group ARROW primary .

    $default  reduce using rule 44 (lambda)


state 75

   11 clauses: clauses NEWLINE . expr DCOLON expr

    ID    shift, and go to state 1
    NUM   shift, and go to state 2
    STR   shift, and go to state 3
    COND  shift, and go to state 4
    DEF   shift, and go to state 5
    DO    shift, and go to state 6
    IF    shift, and go to state 7
    '('   shift, and go to state 8
    '['   shift, and go to state 9
    '{'   shift, and go to state 10

    expr        go to state 81
    do_block    go to state 12
    if_block    go to state 13
    cond_block  go to state 14
    define      go to state 15
    call        go to state 16
    arg         go to state 17
    equal       go to state 18
    pair        go to state 19
    compare     go to state 20
    sum         go to state 21
    product     go to state 22
    primary     go to state 23
    group       go to state 24
    lambda      go to state 25
    list        go to state 26
    dict        go to state 27
    entry       go to state 28


state 76

   10 cond_block: COND DO clauses END .

    $default  reduce using rule 10 (cond_block)


state 77

   15 params: params ID .

    $default  reduce using rule 15 (params)


state 78

   14 define: DEF '(' params ')' . expr

    ID    shift, and go to state 1
    NUM   shift, and go to state 2
    STR   shift, and go to state 3
    COND  shift, and go to state 4
    DEF   shift, and go to state 5
    DO    shift, and go to state 6
    IF    shift, and go to state 7
    '('   shift, and go to state 8
    '['   shift, and go to state 9
    '{'   shift, and go to state 10

    expr        go to state 82
    do_block    go to state 12
    if_block    go to state 13
    cond_block  go to state 14
    define      go to state 15
    call        go to state 16
    arg         go to state 17
    equal       go to state 18
    pair        go to state 19
    compare     go to state 20
    sum         go to state 21
    product     go to state 22
    primary     go to state 23
    group       go to state 24
    lambda      go to state 25
    list        go to state 26
    dict        go to state 27
    entry       go to state 28


state 79

   17 block: block NEWLINE expr .

    $default  reduce using rule 17 (block)


state 80

    7 if_block: IF arg DO block . END
    8         | IF arg DO block . ELSE block END
   17 block: block . NEWLINE expr

    NEWLINE  shift, and go to state 56
    ELSE     shift, and go to state 83
    END      shift, and go to state 84


state 81

   11 clauses: clauses NEWLINE expr . DCOLON expr

    DCOLON  shift, and go to state 85


state 82

   14 define: DEF '(' params ')' expr .

    $default  reduce using rule 14 (define)


state 83

    8 if_block: IF arg DO block ELSE . block END

    ID    shift, and go to state 1
    NUM   shift, and go to state 2
    STR   shift, and go to state 3
    COND  shift, and go to state 4
    DEF   shift, and go to state 5
    DO    shift, and go to state 6
    IF    shift, and go to state 7
    '('   shift, and go to state 8
    '['   shift, and go to state 9
    '{'   shift, and go to state 10

    expr        go to state 33
    do_block    go to state 12
    if_block    go to state 13
    cond_block  go to state 14
    define      go to state 15
    block       go to state 86
    call        go to state 16
    arg         go to state 17
    equal       go to state 18
    pair        go to state 19
    compare     go to state 20
    sum         go to state 21
    product     go to state 22
    primary     go to state 23
    group       go to state 24
    lambda      go to state 25
    list        go to state 26
    dict        go to state 27
    entry       go to state 28


state 84

    7 if_block: IF arg DO block END .

    $default  reduce using rule 7 (if_block)


state 85

   11 clauses: clauses NEWLINE expr DCOLON . expr

    ID    shift, and go to state 1
    NUM   shift, and go to state 2
    STR   shift, and go to state 3
    COND  shift, and go to state 4
    DEF   shift, and go to state 5
    DO    shift, and go to state 6
    IF    shift, and go to state 7
    '('   shift, and go to state 8
    '['   shift, and go to state 9
    '{'   shift, and go to state 10

    expr        go to state 87
    do_block    go to state 12
    if_block    go to state 13
    cond_block  go to state 14
    define      go to state 15
    call        go to state 16
    arg         go to state 17
    equal       go to state 18
    pair        go to state 19
    compare     go to state 20
    sum         go to state 21
    product     go to state 22
    primary     go to state 23
    group       go to state 24
    lambda      go to state 25
    list        go to state 26
    dict        go to state 27
    entry       go to state 28


state 86

    8 if_block: IF arg DO block ELSE block . END
   17 block: block . NEWLINE expr

    NEWLINE  shift, and go to state 56
    END      shift, and go to state 88


state 87

   11 clauses: clauses NEWLINE expr DCOLON expr .

    $default  reduce using rule 11 (clauses)


state 88

    8 if_block: IF arg DO block ELSE block END .

    $default  reduce using rule 8 (if_block)
