State 0
  program    → • stmts $
  stmts      → • stmts stmt stmt_end
  stmts      → • stmt_end
  stmts      → ε •
  stmt_end   → • NL
  stmt_end   → • $

  On $          →   1
  On stmts      →   2
  On stmt_end   →   3
  On NL         →   4

State 1
  stmt_end   → $ •

State 2
  program    → stmts • $
  stmts      → stmts • stmt stmt_end
  stmt       → • let_stmt
  stmt       → • def_stmt
  stmt       → • call
  let_stmt   → • "let" assigns
  def_stmt   → • "def" "(" id_list ")" arg
  call       → • call arg
  call       → • arg
  arg        → • lambda
  lambda     → • ID "->" lambda
  lambda     → • group "->" lambda
  lambda     → • "(" ")" "->" lambda
  lambda     → • logic
  group      → • "(" call ")"
  logic      → • logic "and" equals
  logic      → • logic "or" equals
  logic      → • equals
  equals     → • compare "==" compare
  equals     → • compare "!=" compare
  equals     → • compare
  compare    → • member ">" member
  compare    → • member ">=" member
  compare    → • member "<" member
  compare    → • member "<=" member
  compare    → • member
  member     → • sum "in" sum
  member     → • sum
  sum        → • sum "+" product
  sum        → • sum "-" product
  sum        → • product
  product    → • product "*" unary
  product    → • product "/" unary
  product    → • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On primary    →   5
  On cond_block →   6
  On ID         →   7
  On member     →   8
  On #[         →   9
  On block      →  10
  On $          →  11
  On lambda     →  12
  On literal    →  13
  On def_stmt   →  14
  On sum        →  15
  On {          →  16
  On tuple      →  17
  On true       →  18
  On logic      →  19
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On let_stmt   →  23
  On false      →  24
  On symbol     →  25
  On not        →  26
  On product    →  27
  On map        →  28
  On equals     →  29
  On [          →  30
  On def        →  31
  On call       →  32
  On if_block   →  33
  On let        →  34
  On nil        →  35
  On access     →  36
  On (          →  37
  On NUM        →  38
  On unary      →  39
  On compare    →  40
  On object     →  41
  On arg        →  42
  On if         →  43
  On :          →  44
  On group      →  45
  On list       →  46
  On stmt       →  47
  On STR        →  48

State 3
  stmts      → stmt_end •

State 4
  stmt_end   → NL •

State 5
  unary      → primary •

State 6
  block      → cond_block •

State 7
  lambda     → ID • "->" lambda
  primary    → ID •
  access     → ID • "." ID

  On .          →  49
  On ->         →  50

State 8
  compare    → member • ">" member
  compare    → member • ">=" member
  compare    → member • "<" member
  compare    → member • "<=" member
  compare    → member •

  On >=         →  51
  On <=         →  52
  On <          →  53
  On >          →  54

State 9
  tuple      → "#[" • items "]"
  items      → • items item
  items      → ε •

  On items      →  55

State 10
  primary    → block •

State 11
  program    → stmts $ •

State 12
  arg        → lambda •

State 13
  primary    → literal •

State 14
  stmt       → def_stmt •

State 15
  member     → sum • "in" sum
  member     → sum •
  sum        → sum • "+" product
  sum        → sum • "-" product

  On +          →  56
  On -          →  57
  On in         →  58

State 16
  map        → "{" • entries "}"
  entries    → • entries entry
  entries    → ε •

  On entries    →  59

State 17
  object     → tuple •

State 18
  literal    → "true" •

State 19
  lambda     → logic •
  logic      → logic • "and" equals
  logic      → logic • "or" equals

  On or         →  60
  On and        →  61

State 20
  cond_block → "cond" • "do" clauses "end"

  On do         →  62

State 21
  do_block   → "do" • stmts "end"
  stmts      → • stmts stmt stmt_end
  stmts      → • stmt_end
  stmts      → ε •
  stmt_end   → • NL
  stmt_end   → • $

  On $          →   1
  On stmts      →  63
  On stmt_end   →   3
  On NL         →   4

State 22
  block      → do_block •

State 23
  stmt       → let_stmt •

State 24
  literal    → "false" •

State 25
  primary    → symbol •

State 26
  unary      → "not" • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  group      → • "(" call ")"
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On cond_block →   6
  On ID         →  64
  On #[         →   9
  On block      →  10
  On literal    →  13
  On {          →  16
  On tuple      →  17
  On true       →  18
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On false      →  24
  On symbol     →  25
  On map        →  28
  On [          →  30
  On if_block   →  33
  On nil        →  35
  On access     →  36
  On (          →  65
  On NUM        →  38
  On object     →  41
  On if         →  43
  On :          →  44
  On group      →  66
  On list       →  46
  On STR        →  48
  On primary    →  67

State 27
  sum        → product •
  product    → product • "*" unary
  product    → product • "/" unary

  On *          →  68
  On /          →  69

State 28
  object     → map •

State 29
  logic      → equals •

State 30
  list       → "[" • items "]"
  items      → • items item
  items      → ε •

  On items      →  70

State 31
  def_stmt   → "def" • "(" id_list ")" arg

  On (          →  71

State 32
  stmt       → call •
  call       → call • arg
  arg        → • lambda
  lambda     → • ID "->" lambda
  lambda     → • group "->" lambda
  lambda     → • "(" ")" "->" lambda
  lambda     → • logic
  group      → • "(" call ")"
  logic      → • logic "and" equals
  logic      → • logic "or" equals
  logic      → • equals
  equals     → • compare "==" compare
  equals     → • compare "!=" compare
  equals     → • compare
  compare    → • member ">" member
  compare    → • member ">=" member
  compare    → • member "<" member
  compare    → • member "<=" member
  compare    → • member
  member     → • sum "in" sum
  member     → • sum
  sum        → • sum "+" product
  sum        → • sum "-" product
  sum        → • product
  product    → • product "*" unary
  product    → • product "/" unary
  product    → • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On cond_block →   6
  On ID         →   7
  On #[         →   9
  On member     →   8
  On block      →  10
  On lambda     →  12
  On literal    →  13
  On sum        →  15
  On {          →  16
  On tuple      →  17
  On true       →  18
  On logic      →  19
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On false      →  24
  On symbol     →  25
  On not        →  26
  On product    →  27
  On map        →  28
  On equals     →  29
  On [          →  30
  On if_block   →  33
  On nil        →  35
  On access     →  36
  On (          →  37
  On NUM        →  38
  On unary      →  39
  On compare    →  40
  On object     →  41
  On arg        →  72
  On if         →  43
  On :          →  44
  On group      →  45
  On list       →  46
  On STR        →  48
  On primary    →   5

State 33
  block      → if_block •

State 34
  let_stmt   → "let" • assigns
  assigns    → • assigns "," assign
  assigns    → • assign
  assign     → • ID "=" call

  On ID         →  73
  On assigns    →  74
  On assign     →  75

State 35
  literal    → "nil" •

State 36
  primary    → access •
  access     → access • "." ID

  On .          →  76

State 37
  lambda     → "(" • ")" "->" lambda
  group      → "(" • call ")"
  call       → • call arg
  call       → • arg
  arg        → • lambda
  lambda     → • ID "->" lambda
  lambda     → • group "->" lambda
  lambda     → • "(" ")" "->" lambda
  lambda     → • logic
  group      → • "(" call ")"
  logic      → • logic "and" equals
  logic      → • logic "or" equals
  logic      → • equals
  equals     → • compare "==" compare
  equals     → • compare "!=" compare
  equals     → • compare
  compare    → • member ">" member
  compare    → • member ">=" member
  compare    → • member "<" member
  compare    → • member "<=" member
  compare    → • member
  member     → • sum "in" sum
  member     → • sum
  sum        → • sum "+" product
  sum        → • sum "-" product
  sum        → • product
  product    → • product "*" unary
  product    → • product "/" unary
  product    → • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On cond_block →   6
  On ID         →   7
  On #[         →   9
  On member     →   8
  On block      →  10
  On lambda     →  12
  On literal    →  13
  On sum        →  15
  On {          →  16
  On tuple      →  17
  On true       →  18
  On logic      →  19
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On false      →  24
  On symbol     →  25
  On not        →  26
  On product    →  27
  On map        →  28
  On equals     →  29
  On [          →  30
  On call       →  77
  On if_block   →  33
  On nil        →  35
  On access     →  36
  On (          →  37
  On NUM        →  38
  On unary      →  39
  On compare    →  40
  On object     →  41
  On arg        →  42
  On if         →  43
  On :          →  44
  On group      →  45
  On list       →  46
  On )          →  78
  On STR        →  48
  On primary    →   5

State 38
  primary    → NUM •

State 39
  product    → unary •

State 40
  equals     → compare • "==" compare
  equals     → compare • "!=" compare
  equals     → compare •

  On !=         →  79
  On ==         →  80

State 41
  primary    → object •

State 42
  call       → arg •

State 43
  if_block   → "if" • arg do_else
  if_block   → "if" • arg do_block nothing
  arg        → • lambda
  lambda     → • ID "->" lambda
  lambda     → • group "->" lambda
  lambda     → • "(" ")" "->" lambda
  lambda     → • logic
  group      → • "(" call ")"
  logic      → • logic "and" equals
  logic      → • logic "or" equals
  logic      → • equals
  equals     → • compare "==" compare
  equals     → • compare "!=" compare
  equals     → • compare
  compare    → • member ">" member
  compare    → • member ">=" member
  compare    → • member "<" member
  compare    → • member "<=" member
  compare    → • member
  member     → • sum "in" sum
  member     → • sum
  sum        → • sum "+" product
  sum        → • sum "-" product
  sum        → • product
  product    → • product "*" unary
  product    → • product "/" unary
  product    → • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On cond_block →   6
  On ID         →   7
  On #[         →   9
  On member     →   8
  On block      →  10
  On lambda     →  12
  On literal    →  13
  On sum        →  15
  On {          →  16
  On tuple      →  17
  On true       →  18
  On logic      →  19
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On false      →  24
  On symbol     →  25
  On not        →  26
  On product    →  27
  On map        →  28
  On equals     →  29
  On [          →  30
  On if_block   →  33
  On nil        →  35
  On access     →  36
  On (          →  37
  On NUM        →  38
  On unary      →  39
  On compare    →  40
  On object     →  41
  On arg        →  81
  On if         →  43
  On :          →  44
  On group      →  45
  On list       →  46
  On STR        →  48
  On primary    →   5

State 44
  symbol     → ":" • ID

  On ID         →  82

State 45
  lambda     → group • "->" lambda
  primary    → group •

  On ->         →  83

State 46
  object     → list •

State 47
  stmts      → stmts stmt • stmt_end
  stmt_end   → • NL
  stmt_end   → • $

  On $          →   1
  On stmt_end   →  84
  On NL         →   4

State 48
  primary    → STR •

State 49
  access     → ID "." • ID

  On ID         →  85

State 50
  lambda     → ID "->" • lambda
  lambda     → • ID "->" lambda
  lambda     → • group "->" lambda
  lambda     → • "(" ")" "->" lambda
  lambda     → • logic
  group      → • "(" call ")"
  logic      → • logic "and" equals
  logic      → • logic "or" equals
  logic      → • equals
  equals     → • compare "==" compare
  equals     → • compare "!=" compare
  equals     → • compare
  compare    → • member ">" member
  compare    → • member ">=" member
  compare    → • member "<" member
  compare    → • member "<=" member
  compare    → • member
  member     → • sum "in" sum
  member     → • sum
  sum        → • sum "+" product
  sum        → • sum "-" product
  sum        → • product
  product    → • product "*" unary
  product    → • product "/" unary
  product    → • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On cond_block →   6
  On ID         →   7
  On #[         →   9
  On member     →   8
  On block      →  10
  On lambda     →  86
  On literal    →  13
  On sum        →  15
  On {          →  16
  On tuple      →  17
  On true       →  18
  On logic      →  19
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On false      →  24
  On symbol     →  25
  On not        →  26
  On product    →  27
  On map        →  28
  On equals     →  29
  On [          →  30
  On if_block   →  33
  On nil        →  35
  On access     →  36
  On (          →  37
  On NUM        →  38
  On unary      →  39
  On compare    →  40
  On object     →  41
  On if         →  43
  On :          →  44
  On group      →  45
  On list       →  46
  On STR        →  48
  On primary    →   5

State 51
  compare    → member ">=" • member
  member     → • sum "in" sum
  member     → • sum
  sum        → • sum "+" product
  sum        → • sum "-" product
  sum        → • product
  product    → • product "*" unary
  product    → • product "/" unary
  product    → • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  group      → • "(" call ")"
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On cond_block →   6
  On ID         →  64
  On member     →  87
  On #[         →   9
  On block      →  10
  On literal    →  13
  On sum        →  15
  On {          →  16
  On tuple      →  17
  On true       →  18
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On false      →  24
  On symbol     →  25
  On not        →  26
  On product    →  27
  On map        →  28
  On [          →  30
  On if_block   →  33
  On nil        →  35
  On access     →  36
  On (          →  65
  On NUM        →  38
  On unary      →  39
  On object     →  41
  On if         →  43
  On :          →  44
  On group      →  66
  On list       →  46
  On STR        →  48
  On primary    →   5

State 52
  compare    → member "<=" • member
  member     → • sum "in" sum
  member     → • sum
  sum        → • sum "+" product
  sum        → • sum "-" product
  sum        → • product
  product    → • product "*" unary
  product    → • product "/" unary
  product    → • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  group      → • "(" call ")"
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On cond_block →   6
  On ID         →  64
  On member     →  88
  On #[         →   9
  On block      →  10
  On literal    →  13
  On sum        →  15
  On {          →  16
  On tuple      →  17
  On true       →  18
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On false      →  24
  On symbol     →  25
  On not        →  26
  On product    →  27
  On map        →  28
  On [          →  30
  On if_block   →  33
  On nil        →  35
  On access     →  36
  On (          →  65
  On NUM        →  38
  On unary      →  39
  On object     →  41
  On if         →  43
  On :          →  44
  On group      →  66
  On list       →  46
  On STR        →  48
  On primary    →   5

State 53
  compare    → member "<" • member
  member     → • sum "in" sum
  member     → • sum
  sum        → • sum "+" product
  sum        → • sum "-" product
  sum        → • product
  product    → • product "*" unary
  product    → • product "/" unary
  product    → • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  group      → • "(" call ")"
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On cond_block →   6
  On ID         →  64
  On member     →  89
  On #[         →   9
  On block      →  10
  On literal    →  13
  On sum        →  15
  On {          →  16
  On tuple      →  17
  On true       →  18
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On false      →  24
  On symbol     →  25
  On not        →  26
  On product    →  27
  On map        →  28
  On [          →  30
  On if_block   →  33
  On nil        →  35
  On access     →  36
  On (          →  65
  On NUM        →  38
  On unary      →  39
  On object     →  41
  On if         →  43
  On :          →  44
  On group      →  66
  On list       →  46
  On STR        →  48
  On primary    →   5

State 54
  compare    → member ">" • member
  member     → • sum "in" sum
  member     → • sum
  sum        → • sum "+" product
  sum        → • sum "-" product
  sum        → • product
  product    → • product "*" unary
  product    → • product "/" unary
  product    → • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  group      → • "(" call ")"
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On cond_block →   6
  On ID         →  64
  On member     →  90
  On #[         →   9
  On block      →  10
  On literal    →  13
  On sum        →  15
  On {          →  16
  On tuple      →  17
  On true       →  18
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On false      →  24
  On symbol     →  25
  On not        →  26
  On product    →  27
  On map        →  28
  On [          →  30
  On if_block   →  33
  On nil        →  35
  On access     →  36
  On (          →  65
  On NUM        →  38
  On unary      →  39
  On object     →  41
  On if         →  43
  On :          →  44
  On group      →  66
  On list       →  46
  On STR        →  48
  On primary    →   5

State 55
  tuple      → "#[" items • "]"
  items      → items • item
  item       → • arg opt_comma
  arg        → • lambda
  lambda     → • ID "->" lambda
  lambda     → • group "->" lambda
  lambda     → • "(" ")" "->" lambda
  lambda     → • logic
  group      → • "(" call ")"
  logic      → • logic "and" equals
  logic      → • logic "or" equals
  logic      → • equals
  equals     → • compare "==" compare
  equals     → • compare "!=" compare
  equals     → • compare
  compare    → • member ">" member
  compare    → • member ">=" member
  compare    → • member "<" member
  compare    → • member "<=" member
  compare    → • member
  member     → • sum "in" sum
  member     → • sum
  sum        → • sum "+" product
  sum        → • sum "-" product
  sum        → • product
  product    → • product "*" unary
  product    → • product "/" unary
  product    → • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On cond_block →   6
  On ID         →   7
  On #[         →   9
  On member     →   8
  On block      →  10
  On lambda     →  12
  On literal    →  13
  On sum        →  15
  On {          →  16
  On tuple      →  17
  On true       →  18
  On logic      →  19
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On false      →  24
  On symbol     →  25
  On not        →  26
  On product    →  27
  On map        →  28
  On equals     →  29
  On [          →  30
  On if_block   →  33
  On nil        →  35
  On access     →  36
  On (          →  37
  On NUM        →  38
  On unary      →  39
  On ]          →  91
  On compare    →  40
  On object     →  41
  On arg        →  92
  On if         →  43
  On item       →  93
  On :          →  44
  On group      →  45
  On list       →  46
  On STR        →  48
  On primary    →   5

State 56
  sum        → sum "+" • product
  product    → • product "*" unary
  product    → • product "/" unary
  product    → • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  group      → • "(" call ")"
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On cond_block →   6
  On ID         →  64
  On #[         →   9
  On block      →  10
  On literal    →  13
  On {          →  16
  On tuple      →  17
  On true       →  18
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On false      →  24
  On symbol     →  25
  On not        →  26
  On product    →  94
  On map        →  28
  On [          →  30
  On if_block   →  33
  On nil        →  35
  On access     →  36
  On (          →  65
  On NUM        →  38
  On unary      →  39
  On object     →  41
  On if         →  43
  On :          →  44
  On group      →  66
  On list       →  46
  On STR        →  48
  On primary    →   5

State 57
  sum        → sum "-" • product
  product    → • product "*" unary
  product    → • product "/" unary
  product    → • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  group      → • "(" call ")"
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On cond_block →   6
  On ID         →  64
  On #[         →   9
  On block      →  10
  On literal    →  13
  On {          →  16
  On tuple      →  17
  On true       →  18
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On false      →  24
  On symbol     →  25
  On not        →  26
  On product    →  95
  On map        →  28
  On [          →  30
  On if_block   →  33
  On nil        →  35
  On access     →  36
  On (          →  65
  On NUM        →  38
  On unary      →  39
  On object     →  41
  On if         →  43
  On :          →  44
  On group      →  66
  On list       →  46
  On STR        →  48
  On primary    →   5

State 58
  member     → sum "in" • sum
  sum        → • sum "+" product
  sum        → • sum "-" product
  sum        → • product
  product    → • product "*" unary
  product    → • product "/" unary
  product    → • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  group      → • "(" call ")"
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On cond_block →   6
  On ID         →  64
  On #[         →   9
  On block      →  10
  On literal    →  13
  On sum        →  96
  On {          →  16
  On tuple      →  17
  On true       →  18
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On false      →  24
  On symbol     →  25
  On not        →  26
  On product    →  27
  On map        →  28
  On [          →  30
  On if_block   →  33
  On nil        →  35
  On access     →  36
  On (          →  65
  On NUM        →  38
  On unary      →  39
  On object     →  41
  On if         →  43
  On :          →  44
  On group      →  66
  On list       →  46
  On STR        →  48
  On primary    →   5

State 59
  map        → "{" entries • "}"
  entries    → entries • entry
  entry      → • ID ":" arg opt_comma

  On ID         →  97
  On entry      →  98
  On }          →  99

State 60
  logic      → logic "or" • equals
  equals     → • compare "==" compare
  equals     → • compare "!=" compare
  equals     → • compare
  compare    → • member ">" member
  compare    → • member ">=" member
  compare    → • member "<" member
  compare    → • member "<=" member
  compare    → • member
  member     → • sum "in" sum
  member     → • sum
  sum        → • sum "+" product
  sum        → • sum "-" product
  sum        → • product
  product    → • product "*" unary
  product    → • product "/" unary
  product    → • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  group      → • "(" call ")"
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On cond_block →   6
  On ID         →  64
  On #[         →   9
  On member     →   8
  On block      →  10
  On literal    →  13
  On sum        →  15
  On {          →  16
  On tuple      →  17
  On true       →  18
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On false      →  24
  On symbol     →  25
  On not        →  26
  On product    →  27
  On map        →  28
  On equals     → 100
  On [          →  30
  On if_block   →  33
  On nil        →  35
  On access     →  36
  On (          →  65
  On NUM        →  38
  On unary      →  39
  On compare    →  40
  On object     →  41
  On if         →  43
  On :          →  44
  On group      →  66
  On list       →  46
  On STR        →  48
  On primary    →   5

State 61
  logic      → logic "and" • equals
  equals     → • compare "==" compare
  equals     → • compare "!=" compare
  equals     → • compare
  compare    → • member ">" member
  compare    → • member ">=" member
  compare    → • member "<" member
  compare    → • member "<=" member
  compare    → • member
  member     → • sum "in" sum
  member     → • sum
  sum        → • sum "+" product
  sum        → • sum "-" product
  sum        → • product
  product    → • product "*" unary
  product    → • product "/" unary
  product    → • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  group      → • "(" call ")"
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On cond_block →   6
  On ID         →  64
  On #[         →   9
  On member     →   8
  On block      →  10
  On literal    →  13
  On sum        →  15
  On {          →  16
  On tuple      →  17
  On true       →  18
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On false      →  24
  On symbol     →  25
  On not        →  26
  On product    →  27
  On map        →  28
  On equals     → 101
  On [          →  30
  On if_block   →  33
  On nil        →  35
  On access     →  36
  On (          →  65
  On NUM        →  38
  On unary      →  39
  On compare    →  40
  On object     →  41
  On if         →  43
  On :          →  44
  On group      →  66
  On list       →  46
  On STR        →  48
  On primary    →   5

State 62
  cond_block → "cond" "do" • clauses "end"
  clauses    → • clauses clause
  clauses    → • NL
  clauses    → ε •

  On clauses    → 102
  On NL         → 103

State 63
  do_block   → "do" stmts • "end"
  stmts      → stmts • stmt stmt_end
  stmt       → • let_stmt
  stmt       → • def_stmt
  stmt       → • call
  let_stmt   → • "let" assigns
  def_stmt   → • "def" "(" id_list ")" arg
  call       → • call arg
  call       → • arg
  arg        → • lambda
  lambda     → • ID "->" lambda
  lambda     → • group "->" lambda
  lambda     → • "(" ")" "->" lambda
  lambda     → • logic
  group      → • "(" call ")"
  logic      → • logic "and" equals
  logic      → • logic "or" equals
  logic      → • equals
  equals     → • compare "==" compare
  equals     → • compare "!=" compare
  equals     → • compare
  compare    → • member ">" member
  compare    → • member ">=" member
  compare    → • member "<" member
  compare    → • member "<=" member
  compare    → • member
  member     → • sum "in" sum
  member     → • sum
  sum        → • sum "+" product
  sum        → • sum "-" product
  sum        → • product
  product    → • product "*" unary
  product    → • product "/" unary
  product    → • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On primary    →   5
  On cond_block →   6
  On ID         →   7
  On #[         →   9
  On member     →   8
  On block      →  10
  On lambda     →  12
  On literal    →  13
  On def_stmt   →  14
  On sum        →  15
  On {          →  16
  On tuple      →  17
  On true       →  18
  On logic      →  19
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On let_stmt   →  23
  On false      →  24
  On symbol     →  25
  On not        →  26
  On product    →  27
  On map        →  28
  On equals     →  29
  On [          →  30
  On def        →  31
  On end        → 104
  On call       →  32
  On if_block   →  33
  On let        →  34
  On nil        →  35
  On access     →  36
  On (          →  37
  On NUM        →  38
  On unary      →  39
  On compare    →  40
  On object     →  41
  On arg        →  42
  On if         →  43
  On :          →  44
  On group      →  45
  On list       →  46
  On stmt       →  47
  On STR        →  48

State 64
  primary    → ID •
  access     → ID • "." ID

  On .          →  49

State 65
  group      → "(" • call ")"
  call       → • call arg
  call       → • arg
  arg        → • lambda
  lambda     → • ID "->" lambda
  lambda     → • group "->" lambda
  lambda     → • "(" ")" "->" lambda
  lambda     → • logic
  group      → • "(" call ")"
  logic      → • logic "and" equals
  logic      → • logic "or" equals
  logic      → • equals
  equals     → • compare "==" compare
  equals     → • compare "!=" compare
  equals     → • compare
  compare    → • member ">" member
  compare    → • member ">=" member
  compare    → • member "<" member
  compare    → • member "<=" member
  compare    → • member
  member     → • sum "in" sum
  member     → • sum
  sum        → • sum "+" product
  sum        → • sum "-" product
  sum        → • product
  product    → • product "*" unary
  product    → • product "/" unary
  product    → • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On cond_block →   6
  On ID         →   7
  On #[         →   9
  On member     →   8
  On block      →  10
  On lambda     →  12
  On literal    →  13
  On sum        →  15
  On {          →  16
  On tuple      →  17
  On true       →  18
  On logic      →  19
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On false      →  24
  On symbol     →  25
  On not        →  26
  On product    →  27
  On map        →  28
  On equals     →  29
  On [          →  30
  On call       →  77
  On if_block   →  33
  On nil        →  35
  On access     →  36
  On (          →  37
  On NUM        →  38
  On unary      →  39
  On compare    →  40
  On object     →  41
  On arg        →  42
  On if         →  43
  On :          →  44
  On group      →  45
  On list       →  46
  On STR        →  48
  On primary    →   5

State 66
  primary    → group •

State 67
  unary      → "not" primary •

State 68
  product    → product "*" • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  group      → • "(" call ")"
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On cond_block →   6
  On ID         →  64
  On #[         →   9
  On block      →  10
  On literal    →  13
  On {          →  16
  On tuple      →  17
  On true       →  18
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On false      →  24
  On symbol     →  25
  On not        →  26
  On map        →  28
  On [          →  30
  On if_block   →  33
  On nil        →  35
  On access     →  36
  On (          →  65
  On NUM        →  38
  On unary      → 105
  On object     →  41
  On if         →  43
  On :          →  44
  On group      →  66
  On list       →  46
  On STR        →  48
  On primary    →   5

State 69
  product    → product "/" • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  group      → • "(" call ")"
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On cond_block →   6
  On ID         →  64
  On #[         →   9
  On block      →  10
  On literal    →  13
  On {          →  16
  On tuple      →  17
  On true       →  18
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On false      →  24
  On symbol     →  25
  On not        →  26
  On map        →  28
  On [          →  30
  On if_block   →  33
  On nil        →  35
  On access     →  36
  On (          →  65
  On NUM        →  38
  On unary      → 106
  On object     →  41
  On if         →  43
  On :          →  44
  On group      →  66
  On list       →  46
  On STR        →  48
  On primary    →   5

State 70
  list       → "[" items • "]"
  items      → items • item
  item       → • arg opt_comma
  arg        → • lambda
  lambda     → • ID "->" lambda
  lambda     → • group "->" lambda
  lambda     → • "(" ")" "->" lambda
  lambda     → • logic
  group      → • "(" call ")"
  logic      → • logic "and" equals
  logic      → • logic "or" equals
  logic      → • equals
  equals     → • compare "==" compare
  equals     → • compare "!=" compare
  equals     → • compare
  compare    → • member ">" member
  compare    → • member ">=" member
  compare    → • member "<" member
  compare    → • member "<=" member
  compare    → • member
  member     → • sum "in" sum
  member     → • sum
  sum        → • sum "+" product
  sum        → • sum "-" product
  sum        → • product
  product    → • product "*" unary
  product    → • product "/" unary
  product    → • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On cond_block →   6
  On ID         →   7
  On #[         →   9
  On member     →   8
  On block      →  10
  On lambda     →  12
  On literal    →  13
  On sum        →  15
  On {          →  16
  On tuple      →  17
  On true       →  18
  On logic      →  19
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On false      →  24
  On symbol     →  25
  On not        →  26
  On product    →  27
  On map        →  28
  On equals     →  29
  On [          →  30
  On if_block   →  33
  On nil        →  35
  On access     →  36
  On (          →  37
  On NUM        →  38
  On unary      →  39
  On ]          → 107
  On compare    →  40
  On object     →  41
  On arg        →  92
  On if         →  43
  On item       →  93
  On :          →  44
  On group      →  45
  On list       →  46
  On STR        →  48
  On primary    →   5

State 71
  def_stmt   → "def" "(" • id_list ")" arg
  id_list    → • id_list ID
  id_list    → • ID

  On ID         → 108
  On id_list    → 109

State 72
  call       → call arg •

State 73
  assign     → ID • "=" call

  On =          → 110

State 74
  let_stmt   → "let" assigns •
  assigns    → assigns • "," assign

  On ,          → 111

State 75
  assigns    → assign •

State 76
  access     → access "." • ID

  On ID         → 112

State 77
  group      → "(" call • ")"
  call       → call • arg
  arg        → • lambda
  lambda     → • ID "->" lambda
  lambda     → • group "->" lambda
  lambda     → • "(" ")" "->" lambda
  lambda     → • logic
  group      → • "(" call ")"
  logic      → • logic "and" equals
  logic      → • logic "or" equals
  logic      → • equals
  equals     → • compare "==" compare
  equals     → • compare "!=" compare
  equals     → • compare
  compare    → • member ">" member
  compare    → • member ">=" member
  compare    → • member "<" member
  compare    → • member "<=" member
  compare    → • member
  member     → • sum "in" sum
  member     → • sum
  sum        → • sum "+" product
  sum        → • sum "-" product
  sum        → • product
  product    → • product "*" unary
  product    → • product "/" unary
  product    → • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On cond_block →   6
  On ID         →   7
  On #[         →   9
  On member     →   8
  On block      →  10
  On lambda     →  12
  On literal    →  13
  On sum        →  15
  On {          →  16
  On tuple      →  17
  On true       →  18
  On logic      →  19
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On false      →  24
  On symbol     →  25
  On not        →  26
  On product    →  27
  On map        →  28
  On equals     →  29
  On [          →  30
  On if_block   →  33
  On nil        →  35
  On access     →  36
  On (          →  37
  On NUM        →  38
  On unary      →  39
  On compare    →  40
  On object     →  41
  On arg        →  72
  On if         →  43
  On :          →  44
  On group      →  45
  On list       →  46
  On )          → 113
  On STR        →  48
  On primary    →   5

State 78
  lambda     → "(" ")" • "->" lambda

  On ->         → 114

State 79
  equals     → compare "!=" • compare
  compare    → • member ">" member
  compare    → • member ">=" member
  compare    → • member "<" member
  compare    → • member "<=" member
  compare    → • member
  member     → • sum "in" sum
  member     → • sum
  sum        → • sum "+" product
  sum        → • sum "-" product
  sum        → • product
  product    → • product "*" unary
  product    → • product "/" unary
  product    → • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  group      → • "(" call ")"
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On cond_block →   6
  On ID         →  64
  On member     →   8
  On #[         →   9
  On block      →  10
  On literal    →  13
  On sum        →  15
  On {          →  16
  On tuple      →  17
  On true       →  18
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On false      →  24
  On symbol     →  25
  On not        →  26
  On product    →  27
  On map        →  28
  On [          →  30
  On if_block   →  33
  On nil        →  35
  On access     →  36
  On (          →  65
  On NUM        →  38
  On unary      →  39
  On compare    → 115
  On object     →  41
  On if         →  43
  On :          →  44
  On group      →  66
  On list       →  46
  On STR        →  48
  On primary    →   5

State 80
  equals     → compare "==" • compare
  compare    → • member ">" member
  compare    → • member ">=" member
  compare    → • member "<" member
  compare    → • member "<=" member
  compare    → • member
  member     → • sum "in" sum
  member     → • sum
  sum        → • sum "+" product
  sum        → • sum "-" product
  sum        → • product
  product    → • product "*" unary
  product    → • product "/" unary
  product    → • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  group      → • "(" call ")"
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On cond_block →   6
  On ID         →  64
  On member     →   8
  On #[         →   9
  On block      →  10
  On literal    →  13
  On sum        →  15
  On {          →  16
  On tuple      →  17
  On true       →  18
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On false      →  24
  On symbol     →  25
  On not        →  26
  On product    →  27
  On map        →  28
  On [          →  30
  On if_block   →  33
  On nil        →  35
  On access     →  36
  On (          →  65
  On NUM        →  38
  On unary      →  39
  On compare    → 116
  On object     →  41
  On if         →  43
  On :          →  44
  On group      →  66
  On list       →  46
  On STR        →  48
  On primary    →   5

State 81
  if_block   → "if" arg • do_else
  if_block   → "if" arg • do_block nothing
  do_else    → • "do" stmts "else" stmts "end"
  do_block   → • "do" stmts "end"

  On do         → 117
  On do_block   → 118
  On do_else    → 119

State 82
  symbol     → ":" ID •

State 83
  lambda     → group "->" • lambda
  lambda     → • ID "->" lambda
  lambda     → • group "->" lambda
  lambda     → • "(" ")" "->" lambda
  lambda     → • logic
  group      → • "(" call ")"
  logic      → • logic "and" equals
  logic      → • logic "or" equals
  logic      → • equals
  equals     → • compare "==" compare
  equals     → • compare "!=" compare
  equals     → • compare
  compare    → • member ">" member
  compare    → • member ">=" member
  compare    → • member "<" member
  compare    → • member "<=" member
  compare    → • member
  member     → • sum "in" sum
  member     → • sum
  sum        → • sum "+" product
  sum        → • sum "-" product
  sum        → • product
  product    → • product "*" unary
  product    → • product "/" unary
  product    → • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On cond_block →   6
  On ID         →   7
  On #[         →   9
  On member     →   8
  On block      →  10
  On lambda     → 120
  On literal    →  13
  On sum        →  15
  On {          →  16
  On tuple      →  17
  On true       →  18
  On logic      →  19
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On false      →  24
  On symbol     →  25
  On not        →  26
  On product    →  27
  On map        →  28
  On equals     →  29
  On [          →  30
  On if_block   →  33
  On nil        →  35
  On access     →  36
  On (          →  37
  On NUM        →  38
  On unary      →  39
  On compare    →  40
  On object     →  41
  On if         →  43
  On :          →  44
  On group      →  45
  On list       →  46
  On STR        →  48
  On primary    →   5

State 84
  stmts      → stmts stmt stmt_end •

State 85
  access     → ID "." ID •

State 86
  lambda     → ID "->" lambda •

State 87
  compare    → member ">=" member •

State 88
  compare    → member "<=" member •

State 89
  compare    → member "<" member •

State 90
  compare    → member ">" member •

State 91
  tuple      → "#[" items "]" •

State 92
  item       → arg • opt_comma
  opt_comma  → • ","
  opt_comma  → • NL
  opt_comma  → ε •

  On opt_comma  → 121
  On ,          → 122
  On NL         → 123

State 93
  items      → items item •

State 94
  sum        → sum "+" product •
  product    → product • "*" unary
  product    → product • "/" unary

  On *          →  68
  On /          →  69

State 95
  sum        → sum "-" product •
  product    → product • "*" unary
  product    → product • "/" unary

  On *          →  68
  On /          →  69

State 96
  member     → sum "in" sum •
  sum        → sum • "+" product
  sum        → sum • "-" product

  On +          →  56
  On -          →  57

State 97
  entry      → ID • ":" arg opt_comma

  On :          → 124

State 98
  entries    → entries entry •

State 99
  map        → "{" entries "}" •

State 100
  logic      → logic "or" equals •

State 101
  logic      → logic "and" equals •

State 102
  cond_block → "cond" "do" clauses • "end"
  clauses    → clauses • clause
  clause     → • logic "->" call NL
  logic      → • logic "and" equals
  logic      → • logic "or" equals
  logic      → • equals
  equals     → • compare "==" compare
  equals     → • compare "!=" compare
  equals     → • compare
  compare    → • member ">" member
  compare    → • member ">=" member
  compare    → • member "<" member
  compare    → • member "<=" member
  compare    → • member
  member     → • sum "in" sum
  member     → • sum
  sum        → • sum "+" product
  sum        → • sum "-" product
  sum        → • product
  product    → • product "*" unary
  product    → • product "/" unary
  product    → • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  group      → • "(" call ")"
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On cond_block →   6
  On ID         →  64
  On member     →   8
  On #[         →   9
  On block      →  10
  On literal    →  13
  On sum        →  15
  On {          →  16
  On tuple      →  17
  On true       →  18
  On logic      → 125
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On false      →  24
  On symbol     →  25
  On not        →  26
  On product    →  27
  On map        →  28
  On equals     →  29
  On [          →  30
  On clause     → 126
  On end        → 127
  On if_block   →  33
  On nil        →  35
  On access     →  36
  On (          →  65
  On NUM        →  38
  On unary      →  39
  On compare    →  40
  On object     →  41
  On if         →  43
  On :          →  44
  On group      →  66
  On list       →  46
  On STR        →  48
  On primary    →   5

State 103
  clauses    → NL •

State 104
  do_block   → "do" stmts "end" •

State 105
  product    → product "*" unary •

State 106
  product    → product "/" unary •

State 107
  list       → "[" items "]" •

State 108
  id_list    → ID •

State 109
  def_stmt   → "def" "(" id_list • ")" arg
  id_list    → id_list • ID

  On ID         → 128
  On )          → 129

State 110
  assign     → ID "=" • call
  call       → • call arg
  call       → • arg
  arg        → • lambda
  lambda     → • ID "->" lambda
  lambda     → • group "->" lambda
  lambda     → • "(" ")" "->" lambda
  lambda     → • logic
  group      → • "(" call ")"
  logic      → • logic "and" equals
  logic      → • logic "or" equals
  logic      → • equals
  equals     → • compare "==" compare
  equals     → • compare "!=" compare
  equals     → • compare
  compare    → • member ">" member
  compare    → • member ">=" member
  compare    → • member "<" member
  compare    → • member "<=" member
  compare    → • member
  member     → • sum "in" sum
  member     → • sum
  sum        → • sum "+" product
  sum        → • sum "-" product
  sum        → • product
  product    → • product "*" unary
  product    → • product "/" unary
  product    → • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On cond_block →   6
  On ID         →   7
  On #[         →   9
  On member     →   8
  On block      →  10
  On lambda     →  12
  On literal    →  13
  On sum        →  15
  On {          →  16
  On tuple      →  17
  On true       →  18
  On logic      →  19
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On false      →  24
  On symbol     →  25
  On not        →  26
  On product    →  27
  On map        →  28
  On equals     →  29
  On [          →  30
  On call       → 130
  On if_block   →  33
  On nil        →  35
  On access     →  36
  On (          →  37
  On NUM        →  38
  On unary      →  39
  On compare    →  40
  On object     →  41
  On arg        →  42
  On if         →  43
  On :          →  44
  On group      →  45
  On list       →  46
  On STR        →  48
  On primary    →   5

State 111
  assigns    → assigns "," • assign
  assign     → • ID "=" call

  On ID         →  73
  On assign     → 131

State 112
  access     → access "." ID •

State 113
  group      → "(" call ")" •

State 114
  lambda     → "(" ")" "->" • lambda
  lambda     → • ID "->" lambda
  lambda     → • group "->" lambda
  lambda     → • "(" ")" "->" lambda
  lambda     → • logic
  group      → • "(" call ")"
  logic      → • logic "and" equals
  logic      → • logic "or" equals
  logic      → • equals
  equals     → • compare "==" compare
  equals     → • compare "!=" compare
  equals     → • compare
  compare    → • member ">" member
  compare    → • member ">=" member
  compare    → • member "<" member
  compare    → • member "<=" member
  compare    → • member
  member     → • sum "in" sum
  member     → • sum
  sum        → • sum "+" product
  sum        → • sum "-" product
  sum        → • product
  product    → • product "*" unary
  product    → • product "/" unary
  product    → • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On cond_block →   6
  On ID         →   7
  On #[         →   9
  On member     →   8
  On block      →  10
  On lambda     → 132
  On literal    →  13
  On sum        →  15
  On {          →  16
  On tuple      →  17
  On true       →  18
  On logic      →  19
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On false      →  24
  On symbol     →  25
  On not        →  26
  On product    →  27
  On map        →  28
  On equals     →  29
  On [          →  30
  On if_block   →  33
  On nil        →  35
  On access     →  36
  On (          →  37
  On NUM        →  38
  On unary      →  39
  On compare    →  40
  On object     →  41
  On if         →  43
  On :          →  44
  On group      →  45
  On list       →  46
  On STR        →  48
  On primary    →   5

State 115
  equals     → compare "!=" compare •

State 116
  equals     → compare "==" compare •

State 117
  do_else    → "do" • stmts "else" stmts "end"
  do_block   → "do" • stmts "end"
  stmts      → • stmts stmt stmt_end
  stmts      → • stmt_end
  stmts      → ε •
  stmt_end   → • NL
  stmt_end   → • $

  On $          →   1
  On stmts      → 133
  On stmt_end   →   3
  On NL         →   4

State 118
  if_block   → "if" arg do_block • nothing
  nothing    → ε •

  On nothing    → 134

State 119
  if_block   → "if" arg do_else •

State 120
  lambda     → group "->" lambda •

State 121
  item       → arg opt_comma •

State 122
  opt_comma  → "," •

State 123
  opt_comma  → NL •

State 124
  entry      → ID ":" • arg opt_comma
  arg        → • lambda
  lambda     → • ID "->" lambda
  lambda     → • group "->" lambda
  lambda     → • "(" ")" "->" lambda
  lambda     → • logic
  group      → • "(" call ")"
  logic      → • logic "and" equals
  logic      → • logic "or" equals
  logic      → • equals
  equals     → • compare "==" compare
  equals     → • compare "!=" compare
  equals     → • compare
  compare    → • member ">" member
  compare    → • member ">=" member
  compare    → • member "<" member
  compare    → • member "<=" member
  compare    → • member
  member     → • sum "in" sum
  member     → • sum
  sum        → • sum "+" product
  sum        → • sum "-" product
  sum        → • product
  product    → • product "*" unary
  product    → • product "/" unary
  product    → • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On cond_block →   6
  On ID         →   7
  On #[         →   9
  On member     →   8
  On block      →  10
  On lambda     →  12
  On literal    →  13
  On sum        →  15
  On {          →  16
  On tuple      →  17
  On true       →  18
  On logic      →  19
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On false      →  24
  On symbol     →  25
  On not        →  26
  On product    →  27
  On map        →  28
  On equals     →  29
  On [          →  30
  On if_block   →  33
  On nil        →  35
  On access     →  36
  On (          →  37
  On NUM        →  38
  On unary      →  39
  On compare    →  40
  On object     →  41
  On arg        → 135
  On if         →  43
  On :          →  44
  On group      →  45
  On list       →  46
  On STR        →  48
  On primary    →   5

State 125
  clause     → logic • "->" call NL
  logic      → logic • "and" equals
  logic      → logic • "or" equals

  On or         →  60
  On ->         → 136
  On and        →  61

State 126
  clauses    → clauses clause •

State 127
  cond_block → "cond" "do" clauses "end" •

State 128
  id_list    → id_list ID •

State 129
  def_stmt   → "def" "(" id_list ")" • arg
  arg        → • lambda
  lambda     → • ID "->" lambda
  lambda     → • group "->" lambda
  lambda     → • "(" ")" "->" lambda
  lambda     → • logic
  group      → • "(" call ")"
  logic      → • logic "and" equals
  logic      → • logic "or" equals
  logic      → • equals
  equals     → • compare "==" compare
  equals     → • compare "!=" compare
  equals     → • compare
  compare    → • member ">" member
  compare    → • member ">=" member
  compare    → • member "<" member
  compare    → • member "<=" member
  compare    → • member
  member     → • sum "in" sum
  member     → • sum
  sum        → • sum "+" product
  sum        → • sum "-" product
  sum        → • product
  product    → • product "*" unary
  product    → • product "/" unary
  product    → • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On cond_block →   6
  On ID         →   7
  On #[         →   9
  On member     →   8
  On block      →  10
  On lambda     →  12
  On literal    →  13
  On sum        →  15
  On {          →  16
  On tuple      →  17
  On true       →  18
  On logic      →  19
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On false      →  24
  On symbol     →  25
  On not        →  26
  On product    →  27
  On map        →  28
  On equals     →  29
  On [          →  30
  On if_block   →  33
  On nil        →  35
  On access     →  36
  On (          →  37
  On NUM        →  38
  On unary      →  39
  On compare    →  40
  On object     →  41
  On arg        → 137
  On if         →  43
  On :          →  44
  On group      →  45
  On list       →  46
  On STR        →  48
  On primary    →   5

State 130
  assign     → ID "=" call •
  call       → call • arg
  arg        → • lambda
  lambda     → • ID "->" lambda
  lambda     → • group "->" lambda
  lambda     → • "(" ")" "->" lambda
  lambda     → • logic
  group      → • "(" call ")"
  logic      → • logic "and" equals
  logic      → • logic "or" equals
  logic      → • equals
  equals     → • compare "==" compare
  equals     → • compare "!=" compare
  equals     → • compare
  compare    → • member ">" member
  compare    → • member ">=" member
  compare    → • member "<" member
  compare    → • member "<=" member
  compare    → • member
  member     → • sum "in" sum
  member     → • sum
  sum        → • sum "+" product
  sum        → • sum "-" product
  sum        → • product
  product    → • product "*" unary
  product    → • product "/" unary
  product    → • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On cond_block →   6
  On ID         →   7
  On #[         →   9
  On member     →   8
  On block      →  10
  On lambda     →  12
  On literal    →  13
  On sum        →  15
  On {          →  16
  On tuple      →  17
  On true       →  18
  On logic      →  19
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On false      →  24
  On symbol     →  25
  On not        →  26
  On product    →  27
  On map        →  28
  On equals     →  29
  On [          →  30
  On if_block   →  33
  On nil        →  35
  On access     →  36
  On (          →  37
  On NUM        →  38
  On unary      →  39
  On compare    →  40
  On object     →  41
  On arg        →  72
  On if         →  43
  On :          →  44
  On group      →  45
  On list       →  46
  On STR        →  48
  On primary    →   5

State 131
  assigns    → assigns "," assign •

State 132
  lambda     → "(" ")" "->" lambda •

State 133
  do_else    → "do" stmts • "else" stmts "end"
  do_block   → "do" stmts • "end"
  stmts      → stmts • stmt stmt_end
  stmt       → • let_stmt
  stmt       → • def_stmt
  stmt       → • call
  let_stmt   → • "let" assigns
  def_stmt   → • "def" "(" id_list ")" arg
  call       → • call arg
  call       → • arg
  arg        → • lambda
  lambda     → • ID "->" lambda
  lambda     → • group "->" lambda
  lambda     → • "(" ")" "->" lambda
  lambda     → • logic
  group      → • "(" call ")"
  logic      → • logic "and" equals
  logic      → • logic "or" equals
  logic      → • equals
  equals     → • compare "==" compare
  equals     → • compare "!=" compare
  equals     → • compare
  compare    → • member ">" member
  compare    → • member ">=" member
  compare    → • member "<" member
  compare    → • member "<=" member
  compare    → • member
  member     → • sum "in" sum
  member     → • sum
  sum        → • sum "+" product
  sum        → • sum "-" product
  sum        → • product
  product    → • product "*" unary
  product    → • product "/" unary
  product    → • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On primary    →   5
  On cond_block →   6
  On ID         →   7
  On member     →   8
  On #[         →   9
  On block      →  10
  On else       → 138
  On lambda     →  12
  On literal    →  13
  On def_stmt   →  14
  On sum        →  15
  On {          →  16
  On tuple      →  17
  On true       →  18
  On logic      →  19
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On let_stmt   →  23
  On false      →  24
  On symbol     →  25
  On not        →  26
  On product    →  27
  On map        →  28
  On equals     →  29
  On [          →  30
  On def        →  31
  On end        → 104
  On call       →  32
  On if_block   →  33
  On let        →  34
  On nil        →  35
  On access     →  36
  On (          →  37
  On NUM        →  38
  On unary      →  39
  On compare    →  40
  On object     →  41
  On arg        →  42
  On if         →  43
  On :          →  44
  On group      →  45
  On list       →  46
  On stmt       →  47
  On STR        →  48

State 134
  if_block   → "if" arg do_block nothing •

State 135
  entry      → ID ":" arg • opt_comma
  opt_comma  → • ","
  opt_comma  → • NL
  opt_comma  → ε •

  On opt_comma  → 139
  On ,          → 122
  On NL         → 123

State 136
  clause     → logic "->" • call NL
  call       → • call arg
  call       → • arg
  arg        → • lambda
  lambda     → • ID "->" lambda
  lambda     → • group "->" lambda
  lambda     → • "(" ")" "->" lambda
  lambda     → • logic
  group      → • "(" call ")"
  logic      → • logic "and" equals
  logic      → • logic "or" equals
  logic      → • equals
  equals     → • compare "==" compare
  equals     → • compare "!=" compare
  equals     → • compare
  compare    → • member ">" member
  compare    → • member ">=" member
  compare    → • member "<" member
  compare    → • member "<=" member
  compare    → • member
  member     → • sum "in" sum
  member     → • sum
  sum        → • sum "+" product
  sum        → • sum "-" product
  sum        → • product
  product    → • product "*" unary
  product    → • product "/" unary
  product    → • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On cond_block →   6
  On ID         →   7
  On #[         →   9
  On member     →   8
  On block      →  10
  On lambda     →  12
  On literal    →  13
  On sum        →  15
  On {          →  16
  On tuple      →  17
  On true       →  18
  On logic      →  19
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On false      →  24
  On symbol     →  25
  On not        →  26
  On product    →  27
  On map        →  28
  On equals     →  29
  On [          →  30
  On call       → 140
  On if_block   →  33
  On nil        →  35
  On access     →  36
  On (          →  37
  On NUM        →  38
  On unary      →  39
  On compare    →  40
  On object     →  41
  On arg        →  42
  On if         →  43
  On :          →  44
  On group      →  45
  On list       →  46
  On STR        →  48
  On primary    →   5

State 137
  def_stmt   → "def" "(" id_list ")" arg •

State 138
  do_else    → "do" stmts "else" • stmts "end"
  stmts      → • stmts stmt stmt_end
  stmts      → • stmt_end
  stmts      → ε •
  stmt_end   → • NL
  stmt_end   → • $

  On $          →   1
  On stmts      → 141
  On stmt_end   →   3
  On NL         →   4

State 139
  entry      → ID ":" arg opt_comma •

State 140
  clause     → logic "->" call • NL
  call       → call • arg
  arg        → • lambda
  lambda     → • ID "->" lambda
  lambda     → • group "->" lambda
  lambda     → • "(" ")" "->" lambda
  lambda     → • logic
  group      → • "(" call ")"
  logic      → • logic "and" equals
  logic      → • logic "or" equals
  logic      → • equals
  equals     → • compare "==" compare
  equals     → • compare "!=" compare
  equals     → • compare
  compare    → • member ">" member
  compare    → • member ">=" member
  compare    → • member "<" member
  compare    → • member "<=" member
  compare    → • member
  member     → • sum "in" sum
  member     → • sum
  sum        → • sum "+" product
  sum        → • sum "-" product
  sum        → • product
  product    → • product "*" unary
  product    → • product "/" unary
  product    → • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On cond_block →   6
  On ID         →   7
  On #[         →   9
  On member     →   8
  On block      →  10
  On lambda     →  12
  On literal    →  13
  On sum        →  15
  On {          →  16
  On tuple      →  17
  On true       →  18
  On logic      →  19
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On NL         → 142
  On false      →  24
  On symbol     →  25
  On not        →  26
  On product    →  27
  On map        →  28
  On equals     →  29
  On [          →  30
  On if_block   →  33
  On nil        →  35
  On access     →  36
  On (          →  37
  On NUM        →  38
  On unary      →  39
  On compare    →  40
  On object     →  41
  On arg        →  72
  On if         →  43
  On :          →  44
  On group      →  45
  On list       →  46
  On STR        →  48
  On primary    →   5

State 141
  do_else    → "do" stmts "else" stmts • "end"
  stmts      → stmts • stmt stmt_end
  stmt       → • let_stmt
  stmt       → • def_stmt
  stmt       → • call
  let_stmt   → • "let" assigns
  def_stmt   → • "def" "(" id_list ")" arg
  call       → • call arg
  call       → • arg
  arg        → • lambda
  lambda     → • ID "->" lambda
  lambda     → • group "->" lambda
  lambda     → • "(" ")" "->" lambda
  lambda     → • logic
  group      → • "(" call ")"
  logic      → • logic "and" equals
  logic      → • logic "or" equals
  logic      → • equals
  equals     → • compare "==" compare
  equals     → • compare "!=" compare
  equals     → • compare
  compare    → • member ">" member
  compare    → • member ">=" member
  compare    → • member "<" member
  compare    → • member "<=" member
  compare    → • member
  member     → • sum "in" sum
  member     → • sum
  sum        → • sum "+" product
  sum        → • sum "-" product
  sum        → • product
  product    → • product "*" unary
  product    → • product "/" unary
  product    → • unary
  unary      → • "not" primary
  unary      → • primary
  primary    → • NUM
  primary    → • ID
  primary    → • STR
  primary    → • literal
  primary    → • symbol
  primary    → • access
  primary    → • group
  primary    → • block
  primary    → • object
  literal    → • "true"
  literal    → • "false"
  literal    → • "nil"
  symbol     → • ":" ID
  access     → • access "." ID
  access     → • ID "." ID
  block      → • do_block
  block      → • if_block
  block      → • cond_block
  object     → • list
  object     → • tuple
  object     → • map
  do_block   → • "do" stmts "end"
  if_block   → • "if" arg do_else
  if_block   → • "if" arg do_block nothing
  cond_block → • "cond" "do" clauses "end"
  list       → • "[" items "]"
  tuple      → • "#[" items "]"
  map        → • "{" entries "}"

  On primary    →   5
  On cond_block →   6
  On ID         →   7
  On #[         →   9
  On member     →   8
  On block      →  10
  On lambda     →  12
  On literal    →  13
  On def_stmt   →  14
  On sum        →  15
  On {          →  16
  On tuple      →  17
  On true       →  18
  On logic      →  19
  On cond       →  20
  On do         →  21
  On do_block   →  22
  On let_stmt   →  23
  On false      →  24
  On symbol     →  25
  On not        →  26
  On product    →  27
  On map        →  28
  On equals     →  29
  On [          →  30
  On def        →  31
  On end        → 143
  On call       →  32
  On if_block   →  33
  On let        →  34
  On nil        →  35
  On access     →  36
  On (          →  37
  On NUM        →  38
  On unary      →  39
  On compare    →  40
  On object     →  41
  On arg        →  42
  On if         →  43
  On :          →  44
  On group      →  45
  On list       →  46
  On stmt       →  47
  On STR        →  48

State 142
  clause     → logic "->" call NL •

State 143
  do_else    → "do" stmts "else" stmts "end" •

