State 0
  program         → · stmts $
  stmts           → · stmts stmt NL
  stmts           → · stmts stmt $
  stmts           → · nl
  nl              → · NL
  nl              → · $
  nl              → ε
    On stmts → 1
    On nl    → 2
    On NL    → 3
    On $     → 4
    Reduce 86 (nl, 0)

State 1
  stmts           → stmts · stmt $
  stmts           → stmts · stmt NL
  program         → stmts · $
  stmt            → · let_stmt
  stmt            → · def_stmt
  stmt            → · import_stmt
  stmt            → · call
  let_stmt        → · "let" nl assigns
  def_stmt        → · "def" "(" params ")" do_block
  import_stmt     → · "import" STR
  import_stmt     → · "import" STR "as" ID
  call            → · call arg
  call            → · arg
  arg             → · lambda
  lambda          → · "(" ")" "->" nl logic
  lambda          → · group "->" nl logic
  lambda          → · ID "->" nl logic
  lambda          → · logic
  group           → · "(" ml_call ")"
  logic           → · logic "and" nl equals
  logic           → · logic "or" nl equals
  logic           → · equals
  equals          → · compare "==" nl compare
  equals          → · compare "!=" nl compare
  equals          → · compare
  compare         → · sum "<" nl sum
  compare         → · sum "<=" nl sum
  compare         → · sum ">" nl sum
  compare         → · sum ">=" nl sum
  compare         → · sum
  sum             → · sum "+" nl product
  sum             → · sum "-" nl product
  sum             → · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On stmt        → 5
    On $           → 6
    On let_stmt    → 7
    On def_stmt    → 8
    On import_stmt → 9
    On call        → 10
    On "let"       → 11
    On "def"       → 12
    On "import"    → 13
    On arg         → 14
    On lambda      → 15
    On "("         → 16
    On group       → 17
    On ID          → 18
    On logic       → 19
    On equals      → 20
    On compare     → 21
    On sum         → 22
    On product     → 23
    On block       → 24
    On do_block    → 25
    On if_block    → 26
    On cond_block  → 27
    On primary     → 28
    On "do"        → 29
    On "if"        → 30
    On "cond"      → 31
    On NUM         → 32
    On STR         → 33
    On literal     → 34
    On symbol      → 35
    On list        → 36
    On tuple       → 37
    On dict        → 38
    On access      → 39
    On "true"      → 40
    On "false"     → 41
    On "nil"       → 42
    On ":"         → 43
    On "["         → 44
    On "#["        → 45
    On "{"         → 46

State 2
  stmts           → nl ·
    Reduce 4 (stmts, 1)

State 3
  nl              → NL ·
    Reduce 84 (nl, 1)

State 4
  nl              → $ ·
    Reduce 85 (nl, 1)

State 5
  stmts           → stmts stmt · NL
  stmts           → stmts stmt · $
    On NL → 47
    On $  → 48

State 6
  program         → stmts $ ·
    Reduce 1 (program, 2)

State 7
  stmt            → let_stmt ·
    Reduce 5 (stmt, 1)

State 8
  stmt            → def_stmt ·
    Reduce 6 (stmt, 1)

State 9
  stmt            → import_stmt ·
    Reduce 7 (stmt, 1)

State 10
  call            → call · arg
  stmt            → call ·
  arg             → · lambda
  lambda          → · "(" ")" "->" nl logic
  lambda          → · group "->" nl logic
  lambda          → · ID "->" nl logic
  lambda          → · logic
  group           → · "(" ml_call ")"
  logic           → · logic "and" nl equals
  logic           → · logic "or" nl equals
  logic           → · equals
  equals          → · compare "==" nl compare
  equals          → · compare "!=" nl compare
  equals          → · compare
  compare         → · sum "<" nl sum
  compare         → · sum "<=" nl sum
  compare         → · sum ">" nl sum
  compare         → · sum ">=" nl sum
  compare         → · sum
  sum             → · sum "+" nl product
  sum             → · sum "-" nl product
  sum             → · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On arg        → 49
    On lambda     → 15
    On "("        → 16
    On group      → 17
    On ID         → 18
    On logic      → 19
    On equals     → 20
    On compare    → 21
    On sum        → 22
    On product    → 23
    On block      → 24
    On do_block   → 25
    On if_block   → 26
    On cond_block → 27
    On primary    → 28
    On "do"       → 29
    On "if"       → 30
    On "cond"     → 31
    On NUM        → 32
    On STR        → 33
    On literal    → 34
    On symbol     → 35
    On list       → 36
    On tuple      → 37
    On dict       → 38
    On access     → 39
    On "true"     → 40
    On "false"    → 41
    On "nil"      → 42
    On ":"        → 43
    On "["        → 44
    On "#["       → 45
    On "{"        → 46
    Reduce 8 (stmt, 1)

State 11
  let_stmt        → "let" · nl assigns
  nl              → · NL
  nl              → · $
  nl              → ε
    On nl → 50
    On NL → 3
    On $  → 4
    Reduce 86 (nl, 0)

State 12
  def_stmt        → "def" · "(" params ")" do_block
    On "(" → 51

State 13
  import_stmt     → "import" · STR "as" ID
  import_stmt     → "import" · STR
    On STR → 52

State 14
  call            → arg ·
    Reduce 21 (call, 1)

State 15
  arg             → lambda ·
    Reduce 24 (arg, 1)

State 16
  group           → "(" · ml_call ")"
  lambda          → "(" · ")" "->" nl logic
  ml_call         → · ml_call nl arg
  ml_call         → · arg
  arg             → · lambda
  lambda          → · "(" ")" "->" nl logic
  lambda          → · group "->" nl logic
  lambda          → · ID "->" nl logic
  lambda          → · logic
  group           → · "(" ml_call ")"
  logic           → · logic "and" nl equals
  logic           → · logic "or" nl equals
  logic           → · equals
  equals          → · compare "==" nl compare
  equals          → · compare "!=" nl compare
  equals          → · compare
  compare         → · sum "<" nl sum
  compare         → · sum "<=" nl sum
  compare         → · sum ">" nl sum
  compare         → · sum ">=" nl sum
  compare         → · sum
  sum             → · sum "+" nl product
  sum             → · sum "-" nl product
  sum             → · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On ml_call    → 53
    On ")"        → 54
    On arg        → 55
    On lambda     → 15
    On "("        → 56
    On group      → 17
    On ID         → 18
    On logic      → 19
    On equals     → 20
    On compare    → 21
    On sum        → 22
    On product    → 23
    On block      → 24
    On do_block   → 25
    On if_block   → 26
    On cond_block → 27
    On primary    → 28
    On "do"       → 29
    On "if"       → 30
    On "cond"     → 31
    On NUM        → 32
    On STR        → 33
    On literal    → 34
    On symbol     → 35
    On list       → 36
    On tuple      → 37
    On dict       → 38
    On access     → 39
    On "true"     → 40
    On "false"    → 41
    On "nil"      → 42
    On ":"        → 43
    On "["        → 44
    On "#["       → 45
    On "{"        → 46

State 17
  primary         → group ·
  lambda          → group · "->" nl logic
    On "->" → 57
    Reduce 62 (primary, 1)

State 18
  access          → ID · "." ID
  primary         → ID ·
  lambda          → ID · "->" nl logic
    On "." → 58
    On "->" → 59
    Reduce 58 (primary, 1)

State 19
  logic           → logic · "or" nl equals
  logic           → logic · "and" nl equals
  lambda          → logic ·
    On "or" → 60
    On "and" → 61
    Reduce 28 (lambda, 1)

State 20
  logic           → equals ·
    Reduce 31 (logic, 1)

State 21
  equals          → compare ·
  equals          → compare · "!=" nl compare
  equals          → compare · "==" nl compare
    On "!=" → 62
    On "==" → 63
    Reduce 34 (equals, 1)

State 22
  sum             → sum · "-" nl product
  sum             → sum · "+" nl product
  compare         → sum ·
  compare         → sum · ">=" nl sum
  compare         → sum · ">" nl sum
  compare         → sum · "<=" nl sum
  compare         → sum · "<" nl sum
    On "-" → 64
    On "+" → 65
    On ">=" → 66
    On ">" → 67
    On "<=" → 68
    On "<" → 69
    Reduce 39 (compare, 1)

State 23
  product         → product · "/" nl block
  product         → product · "*" nl block
  sum             → product ·
    On "/" → 70
    On "*" → 71
    Reduce 42 (sum, 1)

State 24
  product         → block ·
    Reduce 45 (product, 1)

State 25
  block           → do_block ·
    Reduce 46 (block, 1)

State 26
  block           → if_block ·
    Reduce 47 (block, 1)

State 27
  block           → cond_block ·
    Reduce 48 (block, 1)

State 28
  block           → primary ·
    Reduce 49 (block, 1)

State 29
  do_block        → "do" · stmts opt_stmt "end"
  stmts           → · stmts stmt NL
  stmts           → · stmts stmt $
  stmts           → · nl
  nl              → · NL
  nl              → · $
  nl              → ε
    On stmts → 72
    On nl    → 2
    On NL    → 3
    On $     → 4
    Reduce 86 (nl, 0)

State 30
  if_block        → "if" · arg do_block
  if_block        → "if" · arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  arg             → · lambda
  lambda          → · "(" ")" "->" nl logic
  lambda          → · group "->" nl logic
  lambda          → · ID "->" nl logic
  lambda          → · logic
  group           → · "(" ml_call ")"
  logic           → · logic "and" nl equals
  logic           → · logic "or" nl equals
  logic           → · equals
  equals          → · compare "==" nl compare
  equals          → · compare "!=" nl compare
  equals          → · compare
  compare         → · sum "<" nl sum
  compare         → · sum "<=" nl sum
  compare         → · sum ">" nl sum
  compare         → · sum ">=" nl sum
  compare         → · sum
  sum             → · sum "+" nl product
  sum             → · sum "-" nl product
  sum             → · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On arg        → 73
    On lambda     → 15
    On "("        → 16
    On group      → 17
    On ID         → 18
    On logic      → 19
    On equals     → 20
    On compare    → 21
    On sum        → 22
    On product    → 23
    On block      → 24
    On do_block   → 25
    On if_block   → 26
    On cond_block → 27
    On primary    → 28
    On "do"       → 29
    On "if"       → 74
    On "cond"     → 31
    On NUM        → 32
    On STR        → 33
    On literal    → 34
    On symbol     → 35
    On list       → 36
    On tuple      → 37
    On dict       → 38
    On access     → 39
    On "true"     → 40
    On "false"    → 41
    On "nil"      → 42
    On ":"        → 43
    On "["        → 44
    On "#["       → 45
    On "{"        → 46

State 31
  cond_block      → "cond" · "do" clauses "end"
    On "do" → 75

State 32
  primary         → NUM ·
    Reduce 57 (primary, 1)

State 33
  primary         → STR ·
    Reduce 59 (primary, 1)

State 34
  primary         → literal ·
    Reduce 60 (primary, 1)

State 35
  primary         → symbol ·
    Reduce 61 (primary, 1)

State 36
  primary         → list ·
    Reduce 63 (primary, 1)

State 37
  primary         → tuple ·
    Reduce 64 (primary, 1)

State 38
  primary         → dict ·
    Reduce 65 (primary, 1)

State 39
  access          → access · "." ID
  primary         → access ·
    On "." → 76
    Reduce 66 (primary, 1)

State 40
  literal         → "true" ·
    Reduce 69 (literal, 1)

State 41
  literal         → "false" ·
    Reduce 70 (literal, 1)

State 42
  literal         → "nil" ·
    Reduce 71 (literal, 1)

State 43
  symbol          → ":" · ID
    On ID → 77

State 44
  list            → "[" · items update "]"
  items           → · items arg opt_comma nl
  items           → · nl
  nl              → · NL
  nl              → · $
  nl              → ε
    On items → 78
    On nl    → 79
    On NL    → 3
    On $     → 4
    Reduce 86 (nl, 0)

State 45
  tuple           → "#[" · items "]"
  items           → · items arg opt_comma nl
  items           → · nl
  nl              → · NL
  nl              → · $
  nl              → ε
    On items → 80
    On nl    → 79
    On NL    → 3
    On $     → 4
    Reduce 86 (nl, 0)

State 46
  dict            → "{" · entries update "}"
  entries         → · entries entry opt_comma nl
  entries         → · nl
  nl              → · NL
  nl              → · $
  nl              → ε
    On entries → 81
    On nl      → 82
    On NL      → 3
    On $       → 4
    Reduce 86 (nl, 0)

State 47
  stmts           → stmts stmt NL ·
    Reduce 2 (stmts, 3)

State 48
  stmts           → stmts stmt $ ·
    Reduce 3 (stmts, 3)

State 49
  call            → call arg ·
    Reduce 20 (call, 2)

State 50
  let_stmt        → "let" nl · assigns
  assigns         → · assigns "," nl assign
  assigns         → · assign
  assign          → · ID "=" call
    On assigns → 83
    On assign  → 84
    On ID      → 85

State 51
  def_stmt        → "def" "(" · params ")" do_block
  params          → · params ID
  params          → · ID
    On params → 86
    On ID     → 87

State 52
  import_stmt     → "import" STR ·
  import_stmt     → "import" STR · "as" ID
    On "as" → 88
    Reduce 18 (import_stmt, 2)

State 53
  ml_call         → ml_call · nl arg
  group           → "(" ml_call · ")"
  nl              → · NL
  nl              → · $
  nl              → ε
    On nl → 89
    On ")" → 90
    On NL → 3
    On $  → 4
    Reduce 86 (nl, 0)

State 54
  lambda          → "(" ")" · "->" nl logic
    On "->" → 91

State 55
  ml_call         → arg ·
    Reduce 23 (ml_call, 1)

State 56
  group           → "(" · ml_call ")"
  lambda          → "(" · ")" "->" nl logic
  ml_call         → · ml_call nl arg
  ml_call         → · arg
  arg             → · lambda
  lambda          → · "(" ")" "->" nl logic
  lambda          → · group "->" nl logic
  lambda          → · ID "->" nl logic
  lambda          → · logic
  group           → · "(" ml_call ")"
  logic           → · logic "and" nl equals
  logic           → · logic "or" nl equals
  logic           → · equals
  equals          → · compare "==" nl compare
  equals          → · compare "!=" nl compare
  equals          → · compare
  compare         → · sum "<" nl sum
  compare         → · sum "<=" nl sum
  compare         → · sum ">" nl sum
  compare         → · sum ">=" nl sum
  compare         → · sum
  sum             → · sum "+" nl product
  sum             → · sum "-" nl product
  sum             → · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On ml_call    → 53
    On ")"        → 54
    On arg        → 55
    On lambda     → 15
    On "("        → 16
    On group      → 17
    On ID         → 18
    On logic      → 19
    On equals     → 20
    On compare    → 21
    On sum        → 22
    On product    → 23
    On block      → 24
    On do_block   → 25
    On if_block   → 26
    On cond_block → 27
    On primary    → 28
    On "do"       → 29
    On "if"       → 30
    On "cond"     → 31
    On NUM        → 32
    On STR        → 33
    On literal    → 34
    On symbol     → 35
    On list       → 36
    On tuple      → 37
    On dict       → 38
    On access     → 39
    On "true"     → 40
    On "false"    → 41
    On "nil"      → 42
    On ":"        → 43
    On "["        → 44
    On "#["       → 45
    On "{"        → 46

State 57
  lambda          → group "->" · nl logic
  nl              → · NL
  nl              → · $
  nl              → ε
    On nl → 92
    On NL → 3
    On $  → 4
    Reduce 86 (nl, 0)

State 58
  access          → ID "." · ID
    On ID → 93

State 59
  lambda          → ID "->" · nl logic
  nl              → · NL
  nl              → · $
  nl              → ε
    On nl → 94
    On NL → 3
    On $  → 4
    Reduce 86 (nl, 0)

State 60
  logic           → logic "or" · nl equals
  nl              → · NL
  nl              → · $
  nl              → ε
    On nl → 95
    On NL → 3
    On $  → 4
    Reduce 86 (nl, 0)

State 61
  logic           → logic "and" · nl equals
  nl              → · NL
  nl              → · $
  nl              → ε
    On nl → 96
    On NL → 3
    On $  → 4
    Reduce 86 (nl, 0)

State 62
  equals          → compare "!=" · nl compare
  nl              → · NL
  nl              → · $
  nl              → ε
    On nl → 97
    On NL → 3
    On $  → 4
    Reduce 86 (nl, 0)

State 63
  equals          → compare "==" · nl compare
  nl              → · NL
  nl              → · $
  nl              → ε
    On nl → 98
    On NL → 3
    On $  → 4
    Reduce 86 (nl, 0)

State 64
  sum             → sum "-" · nl product
  nl              → · NL
  nl              → · $
  nl              → ε
    On nl → 99
    On NL → 3
    On $  → 4
    Reduce 86 (nl, 0)

State 65
  sum             → sum "+" · nl product
  nl              → · NL
  nl              → · $
  nl              → ε
    On nl → 100
    On NL → 3
    On $  → 4
    Reduce 86 (nl, 0)

State 66
  compare         → sum ">=" · nl sum
  nl              → · NL
  nl              → · $
  nl              → ε
    On nl → 101
    On NL → 3
    On $  → 4
    Reduce 86 (nl, 0)

State 67
  compare         → sum ">" · nl sum
  nl              → · NL
  nl              → · $
  nl              → ε
    On nl → 102
    On NL → 3
    On $  → 4
    Reduce 86 (nl, 0)

State 68
  compare         → sum "<=" · nl sum
  nl              → · NL
  nl              → · $
  nl              → ε
    On nl → 103
    On NL → 3
    On $  → 4
    Reduce 86 (nl, 0)

State 69
  compare         → sum "<" · nl sum
  nl              → · NL
  nl              → · $
  nl              → ε
    On nl → 104
    On NL → 3
    On $  → 4
    Reduce 86 (nl, 0)

State 70
  product         → product "/" · nl block
  nl              → · NL
  nl              → · $
  nl              → ε
    On nl → 105
    On NL → 3
    On $  → 4
    Reduce 86 (nl, 0)

State 71
  product         → product "*" · nl block
  nl              → · NL
  nl              → · $
  nl              → ε
    On nl → 106
    On NL → 3
    On $  → 4
    Reduce 86 (nl, 0)

State 72
  stmts           → stmts · stmt $
  stmts           → stmts · stmt NL
  do_block        → "do" stmts · opt_stmt "end"
  stmt            → · let_stmt
  stmt            → · def_stmt
  stmt            → · import_stmt
  stmt            → · call
  opt_stmt        → · stmt
  opt_stmt        → ε
  let_stmt        → · "let" nl assigns
  def_stmt        → · "def" "(" params ")" do_block
  import_stmt     → · "import" STR
  import_stmt     → · "import" STR "as" ID
  call            → · call arg
  call            → · arg
  arg             → · lambda
  lambda          → · "(" ")" "->" nl logic
  lambda          → · group "->" nl logic
  lambda          → · ID "->" nl logic
  lambda          → · logic
  group           → · "(" ml_call ")"
  logic           → · logic "and" nl equals
  logic           → · logic "or" nl equals
  logic           → · equals
  equals          → · compare "==" nl compare
  equals          → · compare "!=" nl compare
  equals          → · compare
  compare         → · sum "<" nl sum
  compare         → · sum "<=" nl sum
  compare         → · sum ">" nl sum
  compare         → · sum ">=" nl sum
  compare         → · sum
  sum             → · sum "+" nl product
  sum             → · sum "-" nl product
  sum             → · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On stmt        → 107
    On opt_stmt    → 108
    On let_stmt    → 7
    On def_stmt    → 8
    On import_stmt → 9
    On call        → 10
    On "let"       → 11
    On "def"       → 12
    On "import"    → 13
    On arg         → 14
    On lambda      → 15
    On "("         → 56
    On group       → 17
    On ID          → 18
    On logic       → 19
    On equals      → 20
    On compare     → 21
    On sum         → 22
    On product     → 23
    On block       → 24
    On do_block    → 25
    On if_block    → 26
    On cond_block  → 27
    On primary     → 28
    On "do"        → 29
    On "if"        → 30
    On "cond"      → 31
    On NUM         → 32
    On STR         → 33
    On literal     → 34
    On symbol      → 35
    On list        → 36
    On tuple       → 37
    On dict        → 38
    On access      → 39
    On "true"      → 40
    On "false"     → 41
    On "nil"       → 42
    On ":"         → 43
    On "["         → 44
    On "#["        → 45
    On "{"         → 46
    Reduce 10 (opt_stmt, 0)

State 73
  if_block        → "if" arg · "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → "if" arg · do_block
  do_block        → · "do" stmts opt_stmt "end"
    On "do"     → 109
    On do_block → 110

State 74
  if_block        → "if" · arg do_block
  if_block        → "if" · arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  arg             → · lambda
  lambda          → · "(" ")" "->" nl logic
  lambda          → · group "->" nl logic
  lambda          → · ID "->" nl logic
  lambda          → · logic
  group           → · "(" ml_call ")"
  logic           → · logic "and" nl equals
  logic           → · logic "or" nl equals
  logic           → · equals
  equals          → · compare "==" nl compare
  equals          → · compare "!=" nl compare
  equals          → · compare
  compare         → · sum "<" nl sum
  compare         → · sum "<=" nl sum
  compare         → · sum ">" nl sum
  compare         → · sum ">=" nl sum
  compare         → · sum
  sum             → · sum "+" nl product
  sum             → · sum "-" nl product
  sum             → · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On arg        → 73
    On lambda     → 15
    On "("        → 56
    On group      → 17
    On ID         → 18
    On logic      → 19
    On equals     → 20
    On compare    → 21
    On sum        → 22
    On product    → 23
    On block      → 24
    On do_block   → 25
    On if_block   → 26
    On cond_block → 27
    On primary    → 28
    On "do"       → 29
    On "if"       → 30
    On "cond"     → 31
    On NUM        → 32
    On STR        → 33
    On literal    → 34
    On symbol     → 35
    On list       → 36
    On tuple      → 37
    On dict       → 38
    On access     → 39
    On "true"     → 40
    On "false"    → 41
    On "nil"      → 42
    On ":"        → 43
    On "["        → 44
    On "#["       → 45
    On "{"        → 46

State 75
  cond_block      → "cond" "do" · clauses "end"
  clauses         → · clauses clause
  clauses         → · NL
    On clauses → 111
    On NL      → 112

State 76
  access          → access "." · ID
    On ID → 113

State 77
  symbol          → ":" ID ·
    Reduce 72 (symbol, 2)

State 78
  items           → items · arg opt_comma nl
  list            → "[" items · update "]"
  arg             → · lambda
  update          → · "|" nl arg
  update          → ε
  lambda          → · "(" ")" "->" nl logic
  lambda          → · group "->" nl logic
  lambda          → · ID "->" nl logic
  lambda          → · logic
  group           → · "(" ml_call ")"
  logic           → · logic "and" nl equals
  logic           → · logic "or" nl equals
  logic           → · equals
  equals          → · compare "==" nl compare
  equals          → · compare "!=" nl compare
  equals          → · compare
  compare         → · sum "<" nl sum
  compare         → · sum "<=" nl sum
  compare         → · sum ">" nl sum
  compare         → · sum ">=" nl sum
  compare         → · sum
  sum             → · sum "+" nl product
  sum             → · sum "-" nl product
  sum             → · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On arg        → 114
    On update     → 115
    On lambda     → 15
    On "|"        → 116
    On "("        → 56
    On group      → 17
    On ID         → 18
    On logic      → 19
    On equals     → 20
    On compare    → 21
    On sum        → 22
    On product    → 23
    On block      → 24
    On do_block   → 25
    On if_block   → 26
    On cond_block → 27
    On primary    → 28
    On "do"       → 29
    On "if"       → 74
    On "cond"     → 31
    On NUM        → 32
    On STR        → 33
    On literal    → 34
    On symbol     → 35
    On list       → 36
    On tuple      → 37
    On dict       → 38
    On access     → 39
    On "true"     → 40
    On "false"    → 41
    On "nil"      → 42
    On ":"        → 43
    On "["        → 44
    On "#["       → 45
    On "{"        → 46
    Reduce 83 (update, 0)

State 79
  items           → nl ·
    Reduce 76 (items, 1)

State 80
  items           → items · arg opt_comma nl
  tuple           → "#[" items · "]"
  arg             → · lambda
  lambda          → · "(" ")" "->" nl logic
  lambda          → · group "->" nl logic
  lambda          → · ID "->" nl logic
  lambda          → · logic
  group           → · "(" ml_call ")"
  logic           → · logic "and" nl equals
  logic           → · logic "or" nl equals
  logic           → · equals
  equals          → · compare "==" nl compare
  equals          → · compare "!=" nl compare
  equals          → · compare
  compare         → · sum "<" nl sum
  compare         → · sum "<=" nl sum
  compare         → · sum ">" nl sum
  compare         → · sum ">=" nl sum
  compare         → · sum
  sum             → · sum "+" nl product
  sum             → · sum "-" nl product
  sum             → · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On arg        → 114
    On "]"        → 117
    On lambda     → 15
    On "("        → 56
    On group      → 17
    On ID         → 18
    On logic      → 19
    On equals     → 20
    On compare    → 21
    On sum        → 22
    On product    → 23
    On block      → 24
    On do_block   → 25
    On if_block   → 26
    On cond_block → 27
    On primary    → 28
    On "do"       → 29
    On "if"       → 74
    On "cond"     → 31
    On NUM        → 32
    On STR        → 33
    On literal    → 34
    On symbol     → 35
    On list       → 36
    On tuple      → 37
    On dict       → 38
    On access     → 39
    On "true"     → 40
    On "false"    → 41
    On "nil"      → 42
    On ":"        → 43
    On "["        → 44
    On "#["       → 45
    On "{"        → 46

State 81
  entries         → entries · entry opt_comma nl
  dict            → "{" entries · update "}"
  entry           → · ID ":" nl arg
  update          → · "|" nl arg
  update          → ε
    On entry  → 118
    On update → 119
    On ID     → 120
    On "|"    → 116
    Reduce 83 (update, 0)

State 82
  entries         → nl ·
    Reduce 80 (entries, 1)

State 83
  assigns         → assigns · "," nl assign
  let_stmt        → "let" nl assigns ·
    On "," → 121
    Reduce 11 (let_stmt, 3)

State 84
  assigns         → assign ·
    Reduce 13 (assigns, 1)

State 85
  assign          → ID · "=" call
    On "=" → 122

State 86
  params          → params · ID
  def_stmt        → "def" "(" params · ")" do_block
    On ID → 123
    On ")" → 124

State 87
  params          → ID ·
    Reduce 17 (params, 1)

State 88
  import_stmt     → "import" STR "as" · ID
    On ID → 125

State 89
  ml_call         → ml_call nl · arg
  arg             → · lambda
  lambda          → · "(" ")" "->" nl logic
  lambda          → · group "->" nl logic
  lambda          → · ID "->" nl logic
  lambda          → · logic
  group           → · "(" ml_call ")"
  logic           → · logic "and" nl equals
  logic           → · logic "or" nl equals
  logic           → · equals
  equals          → · compare "==" nl compare
  equals          → · compare "!=" nl compare
  equals          → · compare
  compare         → · sum "<" nl sum
  compare         → · sum "<=" nl sum
  compare         → · sum ">" nl sum
  compare         → · sum ">=" nl sum
  compare         → · sum
  sum             → · sum "+" nl product
  sum             → · sum "-" nl product
  sum             → · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On arg        → 126
    On lambda     → 15
    On "("        → 56
    On group      → 17
    On ID         → 18
    On logic      → 19
    On equals     → 20
    On compare    → 21
    On sum        → 22
    On product    → 23
    On block      → 24
    On do_block   → 25
    On if_block   → 26
    On cond_block → 27
    On primary    → 28
    On "do"       → 29
    On "if"       → 74
    On "cond"     → 31
    On NUM        → 32
    On STR        → 33
    On literal    → 34
    On symbol     → 35
    On list       → 36
    On tuple      → 37
    On dict       → 38
    On access     → 39
    On "true"     → 40
    On "false"    → 41
    On "nil"      → 42
    On ":"        → 43
    On "["        → 44
    On "#["       → 45
    On "{"        → 46

State 90
  group           → "(" ml_call ")" ·
    Reduce 73 (group, 3)

State 91
  lambda          → "(" ")" "->" · nl logic
  nl              → · NL
  nl              → · $
  nl              → ε
    On nl → 127
    On NL → 3
    On $  → 4
    Reduce 86 (nl, 0)

State 92
  lambda          → group "->" nl · logic
  logic           → · logic "and" nl equals
  logic           → · logic "or" nl equals
  logic           → · equals
  equals          → · compare "==" nl compare
  equals          → · compare "!=" nl compare
  equals          → · compare
  compare         → · sum "<" nl sum
  compare         → · sum "<=" nl sum
  compare         → · sum ">" nl sum
  compare         → · sum ">=" nl sum
  compare         → · sum
  sum             → · sum "+" nl product
  sum             → · sum "-" nl product
  sum             → · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  group           → · "(" ml_call ")"
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On logic      → 128
    On equals     → 20
    On compare    → 21
    On sum        → 22
    On product    → 23
    On block      → 24
    On do_block   → 25
    On if_block   → 26
    On cond_block → 27
    On primary    → 28
    On "do"       → 29
    On "if"       → 74
    On "cond"     → 31
    On NUM        → 32
    On ID         → 129
    On STR        → 33
    On literal    → 34
    On symbol     → 35
    On group      → 130
    On list       → 36
    On tuple      → 37
    On dict       → 38
    On access     → 39
    On "true"     → 40
    On "false"    → 41
    On "nil"      → 42
    On ":"        → 43
    On "("        → 131
    On "["        → 44
    On "#["       → 45
    On "{"        → 46

State 93
  access          → ID "." ID ·
    Reduce 68 (access, 3)

State 94
  lambda          → ID "->" nl · logic
  logic           → · logic "and" nl equals
  logic           → · logic "or" nl equals
  logic           → · equals
  equals          → · compare "==" nl compare
  equals          → · compare "!=" nl compare
  equals          → · compare
  compare         → · sum "<" nl sum
  compare         → · sum "<=" nl sum
  compare         → · sum ">" nl sum
  compare         → · sum ">=" nl sum
  compare         → · sum
  sum             → · sum "+" nl product
  sum             → · sum "-" nl product
  sum             → · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  group           → · "(" ml_call ")"
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On logic      → 132
    On equals     → 20
    On compare    → 21
    On sum        → 22
    On product    → 23
    On block      → 24
    On do_block   → 25
    On if_block   → 26
    On cond_block → 27
    On primary    → 28
    On "do"       → 29
    On "if"       → 74
    On "cond"     → 31
    On NUM        → 32
    On ID         → 129
    On STR        → 33
    On literal    → 34
    On symbol     → 35
    On group      → 130
    On list       → 36
    On tuple      → 37
    On dict       → 38
    On access     → 39
    On "true"     → 40
    On "false"    → 41
    On "nil"      → 42
    On ":"        → 43
    On "("        → 131
    On "["        → 44
    On "#["       → 45
    On "{"        → 46

State 95
  logic           → logic "or" nl · equals
  equals          → · compare "==" nl compare
  equals          → · compare "!=" nl compare
  equals          → · compare
  compare         → · sum "<" nl sum
  compare         → · sum "<=" nl sum
  compare         → · sum ">" nl sum
  compare         → · sum ">=" nl sum
  compare         → · sum
  sum             → · sum "+" nl product
  sum             → · sum "-" nl product
  sum             → · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  group           → · "(" ml_call ")"
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On equals     → 133
    On compare    → 21
    On sum        → 22
    On product    → 23
    On block      → 24
    On do_block   → 25
    On if_block   → 26
    On cond_block → 27
    On primary    → 28
    On "do"       → 29
    On "if"       → 74
    On "cond"     → 31
    On NUM        → 32
    On ID         → 129
    On STR        → 33
    On literal    → 34
    On symbol     → 35
    On group      → 130
    On list       → 36
    On tuple      → 37
    On dict       → 38
    On access     → 39
    On "true"     → 40
    On "false"    → 41
    On "nil"      → 42
    On ":"        → 43
    On "("        → 131
    On "["        → 44
    On "#["       → 45
    On "{"        → 46

State 96
  logic           → logic "and" nl · equals
  equals          → · compare "==" nl compare
  equals          → · compare "!=" nl compare
  equals          → · compare
  compare         → · sum "<" nl sum
  compare         → · sum "<=" nl sum
  compare         → · sum ">" nl sum
  compare         → · sum ">=" nl sum
  compare         → · sum
  sum             → · sum "+" nl product
  sum             → · sum "-" nl product
  sum             → · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  group           → · "(" ml_call ")"
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On equals     → 134
    On compare    → 21
    On sum        → 22
    On product    → 23
    On block      → 24
    On do_block   → 25
    On if_block   → 26
    On cond_block → 27
    On primary    → 28
    On "do"       → 29
    On "if"       → 74
    On "cond"     → 31
    On NUM        → 32
    On ID         → 129
    On STR        → 33
    On literal    → 34
    On symbol     → 35
    On group      → 130
    On list       → 36
    On tuple      → 37
    On dict       → 38
    On access     → 39
    On "true"     → 40
    On "false"    → 41
    On "nil"      → 42
    On ":"        → 43
    On "("        → 131
    On "["        → 44
    On "#["       → 45
    On "{"        → 46

State 97
  equals          → compare "!=" nl · compare
  compare         → · sum "<" nl sum
  compare         → · sum "<=" nl sum
  compare         → · sum ">" nl sum
  compare         → · sum ">=" nl sum
  compare         → · sum
  sum             → · sum "+" nl product
  sum             → · sum "-" nl product
  sum             → · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  group           → · "(" ml_call ")"
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On compare    → 135
    On sum        → 22
    On product    → 23
    On block      → 24
    On do_block   → 25
    On if_block   → 26
    On cond_block → 27
    On primary    → 28
    On "do"       → 29
    On "if"       → 74
    On "cond"     → 31
    On NUM        → 32
    On ID         → 129
    On STR        → 33
    On literal    → 34
    On symbol     → 35
    On group      → 130
    On list       → 36
    On tuple      → 37
    On dict       → 38
    On access     → 39
    On "true"     → 40
    On "false"    → 41
    On "nil"      → 42
    On ":"        → 43
    On "("        → 131
    On "["        → 44
    On "#["       → 45
    On "{"        → 46

State 98
  equals          → compare "==" nl · compare
  compare         → · sum "<" nl sum
  compare         → · sum "<=" nl sum
  compare         → · sum ">" nl sum
  compare         → · sum ">=" nl sum
  compare         → · sum
  sum             → · sum "+" nl product
  sum             → · sum "-" nl product
  sum             → · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  group           → · "(" ml_call ")"
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On compare    → 136
    On sum        → 22
    On product    → 23
    On block      → 24
    On do_block   → 25
    On if_block   → 26
    On cond_block → 27
    On primary    → 28
    On "do"       → 29
    On "if"       → 74
    On "cond"     → 31
    On NUM        → 32
    On ID         → 129
    On STR        → 33
    On literal    → 34
    On symbol     → 35
    On group      → 130
    On list       → 36
    On tuple      → 37
    On dict       → 38
    On access     → 39
    On "true"     → 40
    On "false"    → 41
    On "nil"      → 42
    On ":"        → 43
    On "("        → 131
    On "["        → 44
    On "#["       → 45
    On "{"        → 46

State 99
  sum             → sum "-" nl · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  group           → · "(" ml_call ")"
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On product    → 137
    On block      → 24
    On do_block   → 25
    On if_block   → 26
    On cond_block → 27
    On primary    → 28
    On "do"       → 29
    On "if"       → 74
    On "cond"     → 31
    On NUM        → 32
    On ID         → 129
    On STR        → 33
    On literal    → 34
    On symbol     → 35
    On group      → 130
    On list       → 36
    On tuple      → 37
    On dict       → 38
    On access     → 39
    On "true"     → 40
    On "false"    → 41
    On "nil"      → 42
    On ":"        → 43
    On "("        → 131
    On "["        → 44
    On "#["       → 45
    On "{"        → 46

State 100
  sum             → sum "+" nl · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  group           → · "(" ml_call ")"
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On product    → 138
    On block      → 24
    On do_block   → 25
    On if_block   → 26
    On cond_block → 27
    On primary    → 28
    On "do"       → 29
    On "if"       → 74
    On "cond"     → 31
    On NUM        → 32
    On ID         → 129
    On STR        → 33
    On literal    → 34
    On symbol     → 35
    On group      → 130
    On list       → 36
    On tuple      → 37
    On dict       → 38
    On access     → 39
    On "true"     → 40
    On "false"    → 41
    On "nil"      → 42
    On ":"        → 43
    On "("        → 131
    On "["        → 44
    On "#["       → 45
    On "{"        → 46

State 101
  compare         → sum ">=" nl · sum
  sum             → · sum "+" nl product
  sum             → · sum "-" nl product
  sum             → · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  group           → · "(" ml_call ")"
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On sum        → 139
    On product    → 23
    On block      → 24
    On do_block   → 25
    On if_block   → 26
    On cond_block → 27
    On primary    → 28
    On "do"       → 29
    On "if"       → 74
    On "cond"     → 31
    On NUM        → 32
    On ID         → 129
    On STR        → 33
    On literal    → 34
    On symbol     → 35
    On group      → 130
    On list       → 36
    On tuple      → 37
    On dict       → 38
    On access     → 39
    On "true"     → 40
    On "false"    → 41
    On "nil"      → 42
    On ":"        → 43
    On "("        → 131
    On "["        → 44
    On "#["       → 45
    On "{"        → 46

State 102
  compare         → sum ">" nl · sum
  sum             → · sum "+" nl product
  sum             → · sum "-" nl product
  sum             → · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  group           → · "(" ml_call ")"
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On sum        → 140
    On product    → 23
    On block      → 24
    On do_block   → 25
    On if_block   → 26
    On cond_block → 27
    On primary    → 28
    On "do"       → 29
    On "if"       → 74
    On "cond"     → 31
    On NUM        → 32
    On ID         → 129
    On STR        → 33
    On literal    → 34
    On symbol     → 35
    On group      → 130
    On list       → 36
    On tuple      → 37
    On dict       → 38
    On access     → 39
    On "true"     → 40
    On "false"    → 41
    On "nil"      → 42
    On ":"        → 43
    On "("        → 131
    On "["        → 44
    On "#["       → 45
    On "{"        → 46

State 103
  compare         → sum "<=" nl · sum
  sum             → · sum "+" nl product
  sum             → · sum "-" nl product
  sum             → · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  group           → · "(" ml_call ")"
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On sum        → 141
    On product    → 23
    On block      → 24
    On do_block   → 25
    On if_block   → 26
    On cond_block → 27
    On primary    → 28
    On "do"       → 29
    On "if"       → 74
    On "cond"     → 31
    On NUM        → 32
    On ID         → 129
    On STR        → 33
    On literal    → 34
    On symbol     → 35
    On group      → 130
    On list       → 36
    On tuple      → 37
    On dict       → 38
    On access     → 39
    On "true"     → 40
    On "false"    → 41
    On "nil"      → 42
    On ":"        → 43
    On "("        → 131
    On "["        → 44
    On "#["       → 45
    On "{"        → 46

State 104
  compare         → sum "<" nl · sum
  sum             → · sum "+" nl product
  sum             → · sum "-" nl product
  sum             → · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  group           → · "(" ml_call ")"
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On sum        → 142
    On product    → 23
    On block      → 24
    On do_block   → 25
    On if_block   → 26
    On cond_block → 27
    On primary    → 28
    On "do"       → 29
    On "if"       → 74
    On "cond"     → 31
    On NUM        → 32
    On ID         → 129
    On STR        → 33
    On literal    → 34
    On symbol     → 35
    On group      → 130
    On list       → 36
    On tuple      → 37
    On dict       → 38
    On access     → 39
    On "true"     → 40
    On "false"    → 41
    On "nil"      → 42
    On ":"        → 43
    On "("        → 131
    On "["        → 44
    On "#["       → 45
    On "{"        → 46

State 105
  product         → product "/" nl · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  group           → · "(" ml_call ")"
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On block      → 143
    On do_block   → 25
    On if_block   → 26
    On cond_block → 27
    On primary    → 28
    On "do"       → 29
    On "if"       → 74
    On "cond"     → 31
    On NUM        → 32
    On ID         → 129
    On STR        → 33
    On literal    → 34
    On symbol     → 35
    On group      → 130
    On list       → 36
    On tuple      → 37
    On dict       → 38
    On access     → 39
    On "true"     → 40
    On "false"    → 41
    On "nil"      → 42
    On ":"        → 43
    On "("        → 131
    On "["        → 44
    On "#["       → 45
    On "{"        → 46

State 106
  product         → product "*" nl · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  group           → · "(" ml_call ")"
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On block      → 144
    On do_block   → 25
    On if_block   → 26
    On cond_block → 27
    On primary    → 28
    On "do"       → 29
    On "if"       → 74
    On "cond"     → 31
    On NUM        → 32
    On ID         → 129
    On STR        → 33
    On literal    → 34
    On symbol     → 35
    On group      → 130
    On list       → 36
    On tuple      → 37
    On dict       → 38
    On access     → 39
    On "true"     → 40
    On "false"    → 41
    On "nil"      → 42
    On ":"        → 43
    On "("        → 131
    On "["        → 44
    On "#["       → 45
    On "{"        → 46

State 107
  opt_stmt        → stmt ·
  stmts           → stmts stmt · NL
  stmts           → stmts stmt · $
    On NL → 47
    On $  → 48
    Reduce 9 (opt_stmt, 1)

State 108
  do_block        → "do" stmts opt_stmt · "end"
    On "end" → 145

State 109
  do_block        → "do" · stmts opt_stmt "end"
  if_block        → "if" arg "do" · stmts opt_stmt "else" stmts opt_stmt "end"
  stmts           → · stmts stmt NL
  stmts           → · stmts stmt $
  stmts           → · nl
  nl              → · NL
  nl              → · $
  nl              → ε
    On stmts → 146
    On nl    → 2
    On NL    → 3
    On $     → 4
    Reduce 86 (nl, 0)

State 110
  if_block        → "if" arg do_block ·
    Reduce 52 (if_block, 3)

State 111
  clauses         → clauses · clause
  cond_block      → "cond" "do" clauses · "end"
  clause          → · call "::" nl call NL
  call            → · call arg
  call            → · arg
  arg             → · lambda
  lambda          → · "(" ")" "->" nl logic
  lambda          → · group "->" nl logic
  lambda          → · ID "->" nl logic
  lambda          → · logic
  group           → · "(" ml_call ")"
  logic           → · logic "and" nl equals
  logic           → · logic "or" nl equals
  logic           → · equals
  equals          → · compare "==" nl compare
  equals          → · compare "!=" nl compare
  equals          → · compare
  compare         → · sum "<" nl sum
  compare         → · sum "<=" nl sum
  compare         → · sum ">" nl sum
  compare         → · sum ">=" nl sum
  compare         → · sum
  sum             → · sum "+" nl product
  sum             → · sum "-" nl product
  sum             → · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On clause     → 147
    On "end"      → 148
    On call       → 149
    On arg        → 14
    On lambda     → 15
    On "("        → 56
    On group      → 17
    On ID         → 18
    On logic      → 19
    On equals     → 20
    On compare    → 21
    On sum        → 22
    On product    → 23
    On block      → 24
    On do_block   → 25
    On if_block   → 26
    On cond_block → 27
    On primary    → 28
    On "do"       → 29
    On "if"       → 74
    On "cond"     → 31
    On NUM        → 32
    On STR        → 33
    On literal    → 34
    On symbol     → 35
    On list       → 36
    On tuple      → 37
    On dict       → 38
    On access     → 39
    On "true"     → 40
    On "false"    → 41
    On "nil"      → 42
    On ":"        → 43
    On "["        → 44
    On "#["       → 45
    On "{"        → 46

State 112
  clauses         → NL ·
    Reduce 55 (clauses, 1)

State 113
  access          → access "." ID ·
    Reduce 67 (access, 3)

State 114
  items           → items arg · opt_comma nl
  opt_comma       → · ","
  opt_comma       → ε
    On opt_comma → 150
    On ","       → 151
    Reduce 88 (opt_comma, 0)

State 115
  list            → "[" items update · "]"
    On "]" → 152

State 116
  update          → "|" · nl arg
  nl              → · NL
  nl              → · $
  nl              → ε
    On nl → 153
    On NL → 3
    On $  → 4
    Reduce 86 (nl, 0)

State 117
  tuple           → "#[" items "]" ·
    Reduce 77 (tuple, 3)

State 118
  entries         → entries entry · opt_comma nl
  opt_comma       → · ","
  opt_comma       → ε
    On opt_comma → 154
    On ","       → 151
    Reduce 88 (opt_comma, 0)

State 119
  dict            → "{" entries update · "}"
    On "}" → 155

State 120
  entry           → ID · ":" nl arg
    On ":" → 156

State 121
  assigns         → assigns "," · nl assign
  nl              → · NL
  nl              → · $
  nl              → ε
    On nl → 157
    On NL → 3
    On $  → 4
    Reduce 86 (nl, 0)

State 122
  assign          → ID "=" · call
  call            → · call arg
  call            → · arg
  arg             → · lambda
  lambda          → · "(" ")" "->" nl logic
  lambda          → · group "->" nl logic
  lambda          → · ID "->" nl logic
  lambda          → · logic
  group           → · "(" ml_call ")"
  logic           → · logic "and" nl equals
  logic           → · logic "or" nl equals
  logic           → · equals
  equals          → · compare "==" nl compare
  equals          → · compare "!=" nl compare
  equals          → · compare
  compare         → · sum "<" nl sum
  compare         → · sum "<=" nl sum
  compare         → · sum ">" nl sum
  compare         → · sum ">=" nl sum
  compare         → · sum
  sum             → · sum "+" nl product
  sum             → · sum "-" nl product
  sum             → · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On call       → 158
    On arg        → 14
    On lambda     → 15
    On "("        → 56
    On group      → 17
    On ID         → 18
    On logic      → 19
    On equals     → 20
    On compare    → 21
    On sum        → 22
    On product    → 23
    On block      → 24
    On do_block   → 25
    On if_block   → 26
    On cond_block → 27
    On primary    → 28
    On "do"       → 29
    On "if"       → 74
    On "cond"     → 31
    On NUM        → 32
    On STR        → 33
    On literal    → 34
    On symbol     → 35
    On list       → 36
    On tuple      → 37
    On dict       → 38
    On access     → 39
    On "true"     → 40
    On "false"    → 41
    On "nil"      → 42
    On ":"        → 43
    On "["        → 44
    On "#["       → 45
    On "{"        → 46

State 123
  params          → params ID ·
    Reduce 16 (params, 2)

State 124
  def_stmt        → "def" "(" params ")" · do_block
  do_block        → · "do" stmts opt_stmt "end"
    On do_block → 159
    On "do"     → 29

State 125
  import_stmt     → "import" STR "as" ID ·
    Reduce 19 (import_stmt, 4)

State 126
  ml_call         → ml_call nl arg ·
    Reduce 22 (ml_call, 3)

State 127
  lambda          → "(" ")" "->" nl · logic
  logic           → · logic "and" nl equals
  logic           → · logic "or" nl equals
  logic           → · equals
  equals          → · compare "==" nl compare
  equals          → · compare "!=" nl compare
  equals          → · compare
  compare         → · sum "<" nl sum
  compare         → · sum "<=" nl sum
  compare         → · sum ">" nl sum
  compare         → · sum ">=" nl sum
  compare         → · sum
  sum             → · sum "+" nl product
  sum             → · sum "-" nl product
  sum             → · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  group           → · "(" ml_call ")"
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On logic      → 160
    On equals     → 20
    On compare    → 21
    On sum        → 22
    On product    → 23
    On block      → 24
    On do_block   → 25
    On if_block   → 26
    On cond_block → 27
    On primary    → 28
    On "do"       → 29
    On "if"       → 74
    On "cond"     → 31
    On NUM        → 32
    On ID         → 129
    On STR        → 33
    On literal    → 34
    On symbol     → 35
    On group      → 130
    On list       → 36
    On tuple      → 37
    On dict       → 38
    On access     → 39
    On "true"     → 40
    On "false"    → 41
    On "nil"      → 42
    On ":"        → 43
    On "("        → 131
    On "["        → 44
    On "#["       → 45
    On "{"        → 46

State 128
  logic           → logic · "or" nl equals
  logic           → logic · "and" nl equals
  lambda          → group "->" nl logic ·
    On "or" → 60
    On "and" → 61
    Reduce 26 (lambda, 4)

State 129
  access          → ID · "." ID
  primary         → ID ·
    On "." → 58
    Reduce 58 (primary, 1)

State 130
  primary         → group ·
    Reduce 62 (primary, 1)

State 131
  group           → "(" · ml_call ")"
  ml_call         → · ml_call nl arg
  ml_call         → · arg
  arg             → · lambda
  lambda          → · "(" ")" "->" nl logic
  lambda          → · group "->" nl logic
  lambda          → · ID "->" nl logic
  lambda          → · logic
  group           → · "(" ml_call ")"
  logic           → · logic "and" nl equals
  logic           → · logic "or" nl equals
  logic           → · equals
  equals          → · compare "==" nl compare
  equals          → · compare "!=" nl compare
  equals          → · compare
  compare         → · sum "<" nl sum
  compare         → · sum "<=" nl sum
  compare         → · sum ">" nl sum
  compare         → · sum ">=" nl sum
  compare         → · sum
  sum             → · sum "+" nl product
  sum             → · sum "-" nl product
  sum             → · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On ml_call    → 53
    On arg        → 55
    On lambda     → 15
    On "("        → 56
    On group      → 17
    On ID         → 18
    On logic      → 19
    On equals     → 20
    On compare    → 21
    On sum        → 22
    On product    → 23
    On block      → 24
    On do_block   → 25
    On if_block   → 26
    On cond_block → 27
    On primary    → 28
    On "do"       → 29
    On "if"       → 74
    On "cond"     → 31
    On NUM        → 32
    On STR        → 33
    On literal    → 34
    On symbol     → 35
    On list       → 36
    On tuple      → 37
    On dict       → 38
    On access     → 39
    On "true"     → 40
    On "false"    → 41
    On "nil"      → 42
    On ":"        → 43
    On "["        → 44
    On "#["       → 45
    On "{"        → 46

State 132
  logic           → logic · "or" nl equals
  logic           → logic · "and" nl equals
  lambda          → ID "->" nl logic ·
    On "or" → 60
    On "and" → 61
    Reduce 27 (lambda, 4)

State 133
  logic           → logic "or" nl equals ·
    Reduce 30 (logic, 4)

State 134
  logic           → logic "and" nl equals ·
    Reduce 29 (logic, 4)

State 135
  equals          → compare "!=" nl compare ·
    Reduce 33 (equals, 4)

State 136
  equals          → compare "==" nl compare ·
    Reduce 32 (equals, 4)

State 137
  product         → product · "/" nl block
  product         → product · "*" nl block
  sum             → sum "-" nl product ·
    On "/" → 70
    On "*" → 71
    Reduce 41 (sum, 4)

State 138
  product         → product · "/" nl block
  product         → product · "*" nl block
  sum             → sum "+" nl product ·
    On "/" → 70
    On "*" → 71
    Reduce 40 (sum, 4)

State 139
  sum             → sum · "-" nl product
  sum             → sum · "+" nl product
  compare         → sum ">=" nl sum ·
    On "-" → 64
    On "+" → 65
    Reduce 38 (compare, 4)

State 140
  sum             → sum · "-" nl product
  sum             → sum · "+" nl product
  compare         → sum ">" nl sum ·
    On "-" → 64
    On "+" → 65
    Reduce 37 (compare, 4)

State 141
  sum             → sum · "-" nl product
  sum             → sum · "+" nl product
  compare         → sum "<=" nl sum ·
    On "-" → 64
    On "+" → 65
    Reduce 36 (compare, 4)

State 142
  sum             → sum · "-" nl product
  sum             → sum · "+" nl product
  compare         → sum "<" nl sum ·
    On "-" → 64
    On "+" → 65
    Reduce 35 (compare, 4)

State 143
  product         → product "/" nl block ·
    Reduce 44 (product, 4)

State 144
  product         → product "*" nl block ·
    Reduce 43 (product, 4)

State 145
  do_block        → "do" stmts opt_stmt "end" ·
    Reduce 50 (do_block, 4)

State 146
  stmts           → stmts · stmt $
  stmts           → stmts · stmt NL
  if_block        → "if" arg "do" stmts · opt_stmt "else" stmts opt_stmt "end"
  do_block        → "do" stmts · opt_stmt "end"
  stmt            → · let_stmt
  stmt            → · def_stmt
  stmt            → · import_stmt
  stmt            → · call
  opt_stmt        → · stmt
  opt_stmt        → ε
  let_stmt        → · "let" nl assigns
  def_stmt        → · "def" "(" params ")" do_block
  import_stmt     → · "import" STR
  import_stmt     → · "import" STR "as" ID
  call            → · call arg
  call            → · arg
  arg             → · lambda
  lambda          → · "(" ")" "->" nl logic
  lambda          → · group "->" nl logic
  lambda          → · ID "->" nl logic
  lambda          → · logic
  group           → · "(" ml_call ")"
  logic           → · logic "and" nl equals
  logic           → · logic "or" nl equals
  logic           → · equals
  equals          → · compare "==" nl compare
  equals          → · compare "!=" nl compare
  equals          → · compare
  compare         → · sum "<" nl sum
  compare         → · sum "<=" nl sum
  compare         → · sum ">" nl sum
  compare         → · sum ">=" nl sum
  compare         → · sum
  sum             → · sum "+" nl product
  sum             → · sum "-" nl product
  sum             → · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On stmt        → 107
    On opt_stmt    → 161
    On let_stmt    → 7
    On def_stmt    → 8
    On import_stmt → 9
    On call        → 10
    On "let"       → 11
    On "def"       → 12
    On "import"    → 13
    On arg         → 14
    On lambda      → 15
    On "("         → 56
    On group       → 17
    On ID          → 18
    On logic       → 19
    On equals      → 20
    On compare     → 21
    On sum         → 22
    On product     → 23
    On block       → 24
    On do_block    → 25
    On if_block    → 26
    On cond_block  → 27
    On primary     → 28
    On "do"        → 29
    On "if"        → 74
    On "cond"      → 31
    On NUM         → 32
    On STR         → 33
    On literal     → 34
    On symbol      → 35
    On list        → 36
    On tuple       → 37
    On dict        → 38
    On access      → 39
    On "true"      → 40
    On "false"     → 41
    On "nil"       → 42
    On ":"         → 43
    On "["         → 44
    On "#["        → 45
    On "{"         → 46
    Reduce 10 (opt_stmt, 0)

State 147
  clauses         → clauses clause ·
    Reduce 54 (clauses, 2)

State 148
  cond_block      → "cond" "do" clauses "end" ·
    Reduce 53 (cond_block, 4)

State 149
  call            → call · arg
  clause          → call · "::" nl call NL
  arg             → · lambda
  lambda          → · "(" ")" "->" nl logic
  lambda          → · group "->" nl logic
  lambda          → · ID "->" nl logic
  lambda          → · logic
  group           → · "(" ml_call ")"
  logic           → · logic "and" nl equals
  logic           → · logic "or" nl equals
  logic           → · equals
  equals          → · compare "==" nl compare
  equals          → · compare "!=" nl compare
  equals          → · compare
  compare         → · sum "<" nl sum
  compare         → · sum "<=" nl sum
  compare         → · sum ">" nl sum
  compare         → · sum ">=" nl sum
  compare         → · sum
  sum             → · sum "+" nl product
  sum             → · sum "-" nl product
  sum             → · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On arg        → 49
    On "::"       → 162
    On lambda     → 15
    On "("        → 56
    On group      → 17
    On ID         → 18
    On logic      → 19
    On equals     → 20
    On compare    → 21
    On sum        → 22
    On product    → 23
    On block      → 24
    On do_block   → 25
    On if_block   → 26
    On cond_block → 27
    On primary    → 28
    On "do"       → 29
    On "if"       → 74
    On "cond"     → 31
    On NUM        → 32
    On STR        → 33
    On literal    → 34
    On symbol     → 35
    On list       → 36
    On tuple      → 37
    On dict       → 38
    On access     → 39
    On "true"     → 40
    On "false"    → 41
    On "nil"      → 42
    On ":"        → 43
    On "["        → 44
    On "#["       → 45
    On "{"        → 46

State 150
  items           → items arg opt_comma · nl
  nl              → · NL
  nl              → · $
  nl              → ε
    On nl → 163
    On NL → 3
    On $  → 4
    Reduce 86 (nl, 0)

State 151
  opt_comma       → "," ·
    Reduce 87 (opt_comma, 1)

State 152
  list            → "[" items update "]" ·
    Reduce 74 (list, 4)

State 153
  update          → "|" nl · arg
  arg             → · lambda
  lambda          → · "(" ")" "->" nl logic
  lambda          → · group "->" nl logic
  lambda          → · ID "->" nl logic
  lambda          → · logic
  group           → · "(" ml_call ")"
  logic           → · logic "and" nl equals
  logic           → · logic "or" nl equals
  logic           → · equals
  equals          → · compare "==" nl compare
  equals          → · compare "!=" nl compare
  equals          → · compare
  compare         → · sum "<" nl sum
  compare         → · sum "<=" nl sum
  compare         → · sum ">" nl sum
  compare         → · sum ">=" nl sum
  compare         → · sum
  sum             → · sum "+" nl product
  sum             → · sum "-" nl product
  sum             → · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On arg        → 164
    On lambda     → 15
    On "("        → 56
    On group      → 17
    On ID         → 18
    On logic      → 19
    On equals     → 20
    On compare    → 21
    On sum        → 22
    On product    → 23
    On block      → 24
    On do_block   → 25
    On if_block   → 26
    On cond_block → 27
    On primary    → 28
    On "do"       → 29
    On "if"       → 74
    On "cond"     → 31
    On NUM        → 32
    On STR        → 33
    On literal    → 34
    On symbol     → 35
    On list       → 36
    On tuple      → 37
    On dict       → 38
    On access     → 39
    On "true"     → 40
    On "false"    → 41
    On "nil"      → 42
    On ":"        → 43
    On "["        → 44
    On "#["       → 45
    On "{"        → 46

State 154
  entries         → entries entry opt_comma · nl
  nl              → · NL
  nl              → · $
  nl              → ε
    On nl → 165
    On NL → 3
    On $  → 4
    Reduce 86 (nl, 0)

State 155
  dict            → "{" entries update "}" ·
    Reduce 78 (dict, 4)

State 156
  entry           → ID ":" · nl arg
  nl              → · NL
  nl              → · $
  nl              → ε
    On nl → 166
    On NL → 3
    On $  → 4
    Reduce 86 (nl, 0)

State 157
  assigns         → assigns "," nl · assign
  assign          → · ID "=" call
    On assign → 167
    On ID     → 85

State 158
  call            → call · arg
  assign          → ID "=" call ·
  arg             → · lambda
  lambda          → · "(" ")" "->" nl logic
  lambda          → · group "->" nl logic
  lambda          → · ID "->" nl logic
  lambda          → · logic
  group           → · "(" ml_call ")"
  logic           → · logic "and" nl equals
  logic           → · logic "or" nl equals
  logic           → · equals
  equals          → · compare "==" nl compare
  equals          → · compare "!=" nl compare
  equals          → · compare
  compare         → · sum "<" nl sum
  compare         → · sum "<=" nl sum
  compare         → · sum ">" nl sum
  compare         → · sum ">=" nl sum
  compare         → · sum
  sum             → · sum "+" nl product
  sum             → · sum "-" nl product
  sum             → · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On arg        → 49
    On lambda     → 15
    On "("        → 56
    On group      → 17
    On ID         → 18
    On logic      → 19
    On equals     → 20
    On compare    → 21
    On sum        → 22
    On product    → 23
    On block      → 24
    On do_block   → 25
    On if_block   → 26
    On cond_block → 27
    On primary    → 28
    On "do"       → 29
    On "if"       → 74
    On "cond"     → 31
    On NUM        → 32
    On STR        → 33
    On literal    → 34
    On symbol     → 35
    On list       → 36
    On tuple      → 37
    On dict       → 38
    On access     → 39
    On "true"     → 40
    On "false"    → 41
    On "nil"      → 42
    On ":"        → 43
    On "["        → 44
    On "#["       → 45
    On "{"        → 46
    Reduce 14 (assign, 3)

State 159
  def_stmt        → "def" "(" params ")" do_block ·
    Reduce 15 (def_stmt, 5)

State 160
  logic           → logic · "or" nl equals
  logic           → logic · "and" nl equals
  lambda          → "(" ")" "->" nl logic ·
    On "or" → 60
    On "and" → 61
    Reduce 25 (lambda, 5)

State 161
  do_block        → "do" stmts opt_stmt · "end"
  if_block        → "if" arg "do" stmts opt_stmt · "else" stmts opt_stmt "end"
    On "end" → 145
    On "else" → 168

State 162
  clause          → call "::" · nl call NL
  nl              → · NL
  nl              → · $
  nl              → ε
    On nl → 169
    On NL → 3
    On $  → 4
    Reduce 86 (nl, 0)

State 163
  items           → items arg opt_comma nl ·
    Reduce 75 (items, 4)

State 164
  update          → "|" nl arg ·
    Reduce 82 (update, 3)

State 165
  entries         → entries entry opt_comma nl ·
    Reduce 79 (entries, 4)

State 166
  entry           → ID ":" nl · arg
  arg             → · lambda
  lambda          → · "(" ")" "->" nl logic
  lambda          → · group "->" nl logic
  lambda          → · ID "->" nl logic
  lambda          → · logic
  group           → · "(" ml_call ")"
  logic           → · logic "and" nl equals
  logic           → · logic "or" nl equals
  logic           → · equals
  equals          → · compare "==" nl compare
  equals          → · compare "!=" nl compare
  equals          → · compare
  compare         → · sum "<" nl sum
  compare         → · sum "<=" nl sum
  compare         → · sum ">" nl sum
  compare         → · sum ">=" nl sum
  compare         → · sum
  sum             → · sum "+" nl product
  sum             → · sum "-" nl product
  sum             → · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On arg        → 170
    On lambda     → 15
    On "("        → 56
    On group      → 17
    On ID         → 18
    On logic      → 19
    On equals     → 20
    On compare    → 21
    On sum        → 22
    On product    → 23
    On block      → 24
    On do_block   → 25
    On if_block   → 26
    On cond_block → 27
    On primary    → 28
    On "do"       → 29
    On "if"       → 74
    On "cond"     → 31
    On NUM        → 32
    On STR        → 33
    On literal    → 34
    On symbol     → 35
    On list       → 36
    On tuple      → 37
    On dict       → 38
    On access     → 39
    On "true"     → 40
    On "false"    → 41
    On "nil"      → 42
    On ":"        → 43
    On "["        → 44
    On "#["       → 45
    On "{"        → 46

State 167
  assigns         → assigns "," nl assign ·
    Reduce 12 (assigns, 4)

State 168
  if_block        → "if" arg "do" stmts opt_stmt "else" · stmts opt_stmt "end"
  stmts           → · stmts stmt NL
  stmts           → · stmts stmt $
  stmts           → · nl
  nl              → · NL
  nl              → · $
  nl              → ε
    On stmts → 171
    On nl    → 2
    On NL    → 3
    On $     → 4
    Reduce 86 (nl, 0)

State 169
  clause          → call "::" nl · call NL
  call            → · call arg
  call            → · arg
  arg             → · lambda
  lambda          → · "(" ")" "->" nl logic
  lambda          → · group "->" nl logic
  lambda          → · ID "->" nl logic
  lambda          → · logic
  group           → · "(" ml_call ")"
  logic           → · logic "and" nl equals
  logic           → · logic "or" nl equals
  logic           → · equals
  equals          → · compare "==" nl compare
  equals          → · compare "!=" nl compare
  equals          → · compare
  compare         → · sum "<" nl sum
  compare         → · sum "<=" nl sum
  compare         → · sum ">" nl sum
  compare         → · sum ">=" nl sum
  compare         → · sum
  sum             → · sum "+" nl product
  sum             → · sum "-" nl product
  sum             → · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On call       → 172
    On arg        → 14
    On lambda     → 15
    On "("        → 56
    On group      → 17
    On ID         → 18
    On logic      → 19
    On equals     → 20
    On compare    → 21
    On sum        → 22
    On product    → 23
    On block      → 24
    On do_block   → 25
    On if_block   → 26
    On cond_block → 27
    On primary    → 28
    On "do"       → 29
    On "if"       → 74
    On "cond"     → 31
    On NUM        → 32
    On STR        → 33
    On literal    → 34
    On symbol     → 35
    On list       → 36
    On tuple      → 37
    On dict       → 38
    On access     → 39
    On "true"     → 40
    On "false"    → 41
    On "nil"      → 42
    On ":"        → 43
    On "["        → 44
    On "#["       → 45
    On "{"        → 46

State 170
  entry           → ID ":" nl arg ·
    Reduce 81 (entry, 4)

State 171
  stmts           → stmts · stmt $
  stmts           → stmts · stmt NL
  if_block        → "if" arg "do" stmts opt_stmt "else" stmts · opt_stmt "end"
  stmt            → · let_stmt
  stmt            → · def_stmt
  stmt            → · import_stmt
  stmt            → · call
  opt_stmt        → · stmt
  opt_stmt        → ε
  let_stmt        → · "let" nl assigns
  def_stmt        → · "def" "(" params ")" do_block
  import_stmt     → · "import" STR
  import_stmt     → · "import" STR "as" ID
  call            → · call arg
  call            → · arg
  arg             → · lambda
  lambda          → · "(" ")" "->" nl logic
  lambda          → · group "->" nl logic
  lambda          → · ID "->" nl logic
  lambda          → · logic
  group           → · "(" ml_call ")"
  logic           → · logic "and" nl equals
  logic           → · logic "or" nl equals
  logic           → · equals
  equals          → · compare "==" nl compare
  equals          → · compare "!=" nl compare
  equals          → · compare
  compare         → · sum "<" nl sum
  compare         → · sum "<=" nl sum
  compare         → · sum ">" nl sum
  compare         → · sum ">=" nl sum
  compare         → · sum
  sum             → · sum "+" nl product
  sum             → · sum "-" nl product
  sum             → · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On stmt        → 107
    On opt_stmt    → 173
    On let_stmt    → 7
    On def_stmt    → 8
    On import_stmt → 9
    On call        → 10
    On "let"       → 11
    On "def"       → 12
    On "import"    → 13
    On arg         → 14
    On lambda      → 15
    On "("         → 56
    On group       → 17
    On ID          → 18
    On logic       → 19
    On equals      → 20
    On compare     → 21
    On sum         → 22
    On product     → 23
    On block       → 24
    On do_block    → 25
    On if_block    → 26
    On cond_block  → 27
    On primary     → 28
    On "do"        → 29
    On "if"        → 74
    On "cond"      → 31
    On NUM         → 32
    On STR         → 33
    On literal     → 34
    On symbol      → 35
    On list        → 36
    On tuple       → 37
    On dict        → 38
    On access      → 39
    On "true"      → 40
    On "false"     → 41
    On "nil"       → 42
    On ":"         → 43
    On "["         → 44
    On "#["        → 45
    On "{"         → 46
    Reduce 10 (opt_stmt, 0)

State 172
  call            → call · arg
  clause          → call "::" nl call · NL
  arg             → · lambda
  lambda          → · "(" ")" "->" nl logic
  lambda          → · group "->" nl logic
  lambda          → · ID "->" nl logic
  lambda          → · logic
  group           → · "(" ml_call ")"
  logic           → · logic "and" nl equals
  logic           → · logic "or" nl equals
  logic           → · equals
  equals          → · compare "==" nl compare
  equals          → · compare "!=" nl compare
  equals          → · compare
  compare         → · sum "<" nl sum
  compare         → · sum "<=" nl sum
  compare         → · sum ">" nl sum
  compare         → · sum ">=" nl sum
  compare         → · sum
  sum             → · sum "+" nl product
  sum             → · sum "-" nl product
  sum             → · product
  product         → · product "*" nl block
  product         → · product "/" nl block
  product         → · block
  block           → · do_block
  block           → · if_block
  block           → · cond_block
  block           → · primary
  do_block        → · "do" stmts opt_stmt "end"
  if_block        → · "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end"
  if_block        → · "if" arg do_block
  cond_block      → · "cond" "do" clauses "end"
  primary         → · NUM
  primary         → · ID
  primary         → · STR
  primary         → · literal
  primary         → · symbol
  primary         → · group
  primary         → · list
  primary         → · tuple
  primary         → · dict
  primary         → · access
  literal         → · "true"
  literal         → · "false"
  literal         → · "nil"
  symbol          → · ":" ID
  list            → · "[" items update "]"
  tuple           → · "#[" items "]"
  dict            → · "{" entries update "}"
  access          → · access "." ID
  access          → · ID "." ID
    On arg        → 49
    On NL         → 174
    On lambda     → 15
    On "("        → 56
    On group      → 17
    On ID         → 18
    On logic      → 19
    On equals     → 20
    On compare    → 21
    On sum        → 22
    On product    → 23
    On block      → 24
    On do_block   → 25
    On if_block   → 26
    On cond_block → 27
    On primary    → 28
    On "do"       → 29
    On "if"       → 74
    On "cond"     → 31
    On NUM        → 32
    On STR        → 33
    On literal    → 34
    On symbol     → 35
    On list       → 36
    On tuple      → 37
    On dict       → 38
    On access     → 39
    On "true"     → 40
    On "false"    → 41
    On "nil"      → 42
    On ":"        → 43
    On "["        → 44
    On "#["       → 45
    On "{"        → 46

State 173
  if_block        → "if" arg "do" stmts opt_stmt "else" stmts opt_stmt · "end"
    On "end" → 175

State 174
  clause          → call "::" nl call NL ·
    Reduce 56 (clause, 5)

State 175
  if_block        → "if" arg "do" stmts opt_stmt "else" stmts opt_stmt "end" ·
    Reduce 51 (if_block, 9)

