%YAML 1.2
---
name: Rye
file_extensions:
  - rye
scope: source.rye
contexts:
  main:
    # Symchar: [^\s\(\)\[\]\{\}\:\;\"\.\|]
    # Reserved: [\s\(\)\[\]\{\}\:\;\"\.\|]

    # Function call
    - match: '(\()((?:[^\s\(\)\[\]\{\}\:\;\"\.\|]+\.)*)([^\s\(\)\[\]\{\}\:\;\"\.\|]+)(?:\s+|\))'
      captures:
        1: punctuation.section.function.rye
        2: entity.name.type.class.rye
        3: entity.name.function.rye

    # Def
    - match: '\b(def)\s+(\()\s*([^\s\(\)\[\]\{\}\:\;\"\.\|]+)((?:\s+(?:[^\s\(\)\[\]\{\}\:\;\"\.\|]+))*)\s*(\))'
      captures:
        1: keyword.control.function.rye
        2: punctuation.section.function.rye
        3: entity.name.function.rye
        4: variable.parameter.rye
        5: punctuation.section.function.rye

    # Module
    - match: '\s*(module)\s+([^\s\(\)\[\]\{\}\:\;\"\.\|]+)\b'
      captures:
        1: keyword.control.module.rye
        2: entity.name.type.class.rye

    # Keywords
    - match: 'do|end|if|else'
      scope: keyword.control.rye

    # Quote
    - match: ':[\w]+'
      scope: constant.other.symbol.rye

    # String
    - match: '"'
      scope: punctuation.string.begin.rye
      push: string

    # Number
    - match: '\b[0-9]+\b'
      scope: constant.numeric.integer.rye

    - match: '\b[0-9]+\.[0-9]+\b'
      scope: constant.numeric.float.rye

    # Operators
    - match: '(->|\|)'
      scope: keyword.operator.other.rye

    # Constants
    - match: 'true|false|nil'
      scope: constant.language.rye

    # Comment
    - match: ';.*$'
      scope: comment.line.character.rye

  string:
    - meta_scope: string.quoted.double.rye
    - match: '\\.'
      scope: constant.character.escaped.rye
    - match: '"'
      scope: punctuation.string.end.rye
      pop: true
