module Canvas
import Math

let white = {0xFF, 0xFF, 0xFF},
    black = {0, 0, 0}

def color(r, g, b) {r, g, b}

def draw-bezier(c1, c2, c3, canvas) do
  if Math.abs(c3.0 - c1.0) < 4 and
     Math.abs(c3.1 - c1.1) < 4 do
    Device.write(canvas, {:line, c1.0, c1.1, c3.0, c3.1})
  else
    let m1 = Math.midpoint(c1, c2),
        m2 = Math.midpoint(c2, c3),
        m3 = Math.midpoint(m1, m2)
    draw-bezier(c1, m1, m3, canvas)
    draw-bezier(m3, m2, c3, canvas)
  end
end

def new(width, height) do
  let window = unwrap!(Device.open(:window, {width, height}))

  {
    width: width,
    height: height,
    clear: \color -> Device.write(window, {:clear, color}),
    line: \a, b -> Device.write(window, {:line, a.0, a.1, b.0, b.1}),
    pixel: \p, color -> Device.write(window, {:pixel, p.0, p.1, color}),
    text: \msg, p -> Device.write(window, {:text, msg, p.0, p.1}),
    blit: \img, p, size -> Device.write(window, {:blit, img, p.0, p.1, size.0, size.1}),
    bezier: \a, b, c -> draw-bezier(a, b, c, window)
  }
end
