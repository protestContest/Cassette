module Enum

def (index-of item enum) do
  find \test -> test == item enum
end

def (last-index-of item enum) do
  def (loop index) do
    cond do
      index < 0 -> #enum
      enum.(index) == item -> index
      true -> loop index - 1
    end
  end

  loop #enum - 1
end

def (find fn enum) do
  def (loop index) do
    cond do
      index == #enum -> nil
      (fn enum.(index)) -> index
      true -> loop index + 1
    end
  end

  loop 0
end

def (stream enum) do
  def (stream-from index) do
    \-> do
      if index == #enum do
        nil
      else
        enum.(index) | (stream-from index + 1)
      end
    end
  end

  stream-from 0
end

