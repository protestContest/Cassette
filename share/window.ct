module Window
import Graphics (Point, Rect)

def Color(r, g, b) Host.format([r, g, b, 0])
def white() Color(255, 255, 255)
def black() Color(0, 0, 0)

record Event(what, message, time, where, modifiers)
record Window(title, width, height, ref)
record FontInfo(ascent, descent, max_width, leading, line_height)

def mod_mask(mod)
  if
    mod == :cmd,      1 <<  8
    mod == :shift,    1 <<  9
    mod == :caps,     1 << 10
    mod == :opt,      1 << 11
    mod == :control,  1 << 12
    else 0

def modifier?(event, mod)
  event.modifiers & mod_mask(mod)

def open(title, width, height)
  Window(title, width, height, Host.open_window(title, width, height))
def close(window) Host.close_window(window.ref)
def update(window) Host.update_window(window.ref)

def next_event() do
  let
    event = Host.next_event(),
    where = Point(event[3][0], event[3][1])
  Event(event[0], event[1], event[2], where, event[4])
end

def bounds(window)
  Rect(0, 0, window.width, window.height)

def clear(color, window)
  fill_rect(bounds(window), color, window)


def write_pixel(x, y, color, window) Host.write_pixel(x, y, color, window.ref)
def move_to(x, y, window) Host.move_to(x, y, window.ref)
def move(dx, dy, window) Host.move(dx, dy, window.ref)
def set_color(color, window) Host.set_color(color, window.ref)
def set_font(name, size, window) Host.set_font(name, size, window.ref)
def draw_string(text, window) Host.draw_string(text, window.ref)
def string_width(text, window) Host.string_width(text, window.ref)
def line_to(x, y, window) Host.line_to(x, y, window.ref)
def line(dx, dy, window) Host.line(dx, dy, window.ref)
def fill_rect(rect, color, window)
  Host.fill_rect(rect.left, rect.top, rect.right, rect.bottom, color, window.ref)
def blit(data, width, height, x, y, window) Host.blit(data, width, height, x, y, window.ref)

def frame_rect(rect, window) do
  move_to(rect.left, rect.top, window)
  line_to(rect.right, rect.top, window)
  line_to(rect.right, rect.bottom, window)
  line_to(rect.left, rect.bottom, window)
  line_to(rect.left, rect.top, window)
end

def draw_line(x0, y0, x1, y1, window) do
  move_to(x0, y0, window)
  line_to(x1, y1, window)
end

def get_pen(window) do
  let pen = Host.get_pen(window.ref)
  Point(pen[0], pen[1])
end

def font_info(window) do
  let info = Host.font_info(window.ref)
  FontInfo(info[0], info[1], info[2], info[3], info[0] + info[1] + info[3])
end
