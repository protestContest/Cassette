block         → block stmt
block         → newlines
block         → ε
stmt          → expr newlines
expr          → define
expr          → if_block
expr          → call
define        → "def" ID logic
define        → "def" "(" params ")" do_block
params        → params ID
params        → ID
if_block      → "if" logic "do" block "else" block "end"
if_block      → "if" logic primary primary
call          → call logic
call          → logic
logic         → logic "and" equals
logic         → logic "or" equals
logic         → equals
equals        → pair "==" pair
equals        → pair
pair          → compare "|" compare
pair          → compare
compare       → sum "<" sum
compare       → sum ">" sum
compare       → sum
sum           → sum "+" product
sum           → sum "-" product
sum           → product
product       → product "*" primary
product       → product "/" primary
product       → primary
primary       → NUM
primary       → ID
primary       → group
primary       → lambda
primary       → do_block
do_block      → "do" block "end"
group         → "(" expr ")"
lambda        → group "->" primary
newlines      → NL
newlines      → $
