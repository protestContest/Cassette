(do
  (def (reduce list acc fun)
    (cond ((= list nil) acc)
          (else
            (reduce (tail list)
              (fun (head list) acc)
              fun))))

  (def (map list fun)
    (reverse
      (reduce list nil (fn (item rest)
                        ((fun item) . rest)))))

  (def (square n) (* n n))

  (map '(1 2 3 4 5) square))